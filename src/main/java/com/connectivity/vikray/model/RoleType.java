package com.connectivity.vikray.model;
// Generated 6 Dec, 2018 11:37:25 AM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * RoleType generated by hbm2java
 */
@Entity
@Table(name = "ROLE_TYPE", catalog = "namcrm")
public class RoleType implements java.io.Serializable {

	private long id;
	private String description;
	private String parentTypeId;
	private Set<AccountDetail> accountDetails = new HashSet<AccountDetail>(0);
	private Set<AccountDetail> accountDetails_1 = new HashSet<AccountDetail>(0);
	private Set<PersonDetail> personDetails = new HashSet<PersonDetail>(0);
	private Set<PersonDetail> personDetails_1 = new HashSet<PersonDetail>(0);

	public RoleType() {
	}

	public RoleType(long id) {
		this.id = id;
	}

	public RoleType(long id, String description, String parentTypeId, Set<AccountDetail> accountDetails,
			Set<AccountDetail> accountDetails_1, Set<PersonDetail> personDetails, Set<PersonDetail> personDetails_1) {
		this.id = id;
		this.description = description;
		this.parentTypeId = parentTypeId;
		this.accountDetails = accountDetails;
		this.accountDetails_1 = accountDetails_1;
		this.personDetails = personDetails;
		this.personDetails_1 = personDetails_1;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "PARENT_TYPE_ID")
	public String getParentTypeId() {
		return this.parentTypeId;
	}

	public void setParentTypeId(String parentTypeId) {
		this.parentTypeId = parentTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roleType")
	public Set<AccountDetail> getAccountDetails() {
		return this.accountDetails;
	}

	public void setAccountDetails(Set<AccountDetail> accountDetails) {
		this.accountDetails = accountDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roleType")
	public Set<AccountDetail> getAccountDetails_1() {
		return this.accountDetails_1;
	}

	public void setAccountDetails_1(Set<AccountDetail> accountDetails_1) {
		this.accountDetails_1 = accountDetails_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roleType")
	public Set<PersonDetail> getPersonDetails() {
		return this.personDetails;
	}

	public void setPersonDetails(Set<PersonDetail> personDetails) {
		this.personDetails = personDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roleType")
	public Set<PersonDetail> getPersonDetails_1() {
		return this.personDetails_1;
	}

	public void setPersonDetails_1(Set<PersonDetail> personDetails_1) {
		this.personDetails_1 = personDetails_1;
	}

}
