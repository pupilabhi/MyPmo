package com.connectivity.vikray.model;
// Generated 6 Dec, 2018 11:37:25 AM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InvoiceHeader generated by hbm2java
 */
@Entity
@Table(name = "INVOICE_HEADER", catalog = "namcrm")
public class InvoiceHeader implements java.io.Serializable {

	private long id;
	private AccountAddress accountAddressByBillingFk;
	private AccountAddress accountAddressByShippingFk;
	private AccountDetail accountDetailByToShipAccountFk;
	private AccountDetail accountDetailByAccountFk;
	private CrmType crmType;
	private Currency currency;
	private DeliveryChallan deliveryChallan;
	private Domain domain;
	private InvoiceHeader invoiceHeader;
	private Organisation organisation;
	private OrgBankDetail orgBankDetail;
	private OrgLocation orgLocation;
	private PersonDetail personDetailByPersonFk;
	private PersonDetail personDetailByFinanceContactFk;
	private SalesOrderHeader salesOrderHeader;
	private StatusItem statusItem;
	private UserDetails userDetailsByCreatedBy;
	private UserDetails userDetailsByLastModifiedBy;
	private Date acceptedDate;
	private String contactEmail;
	private String contactPhnNo;
	private Date createdDate;
	private String custPoNo;
	private boolean customerAcceptance;
	private String customerRejectReason;
	private Long deliveryTerms;
	private String destination;
	private String dispatchThrough;
	private String docSequence;
	private String financeEmail;
	private String financePhnNo;
	private String guid;
	private String invoiceName;
	private boolean isRevised;
	private Date lastModifiedDate;
	private Long paymnetTerms;
	private String remarks;
	private String approveRejectReason;
	private Date approveRejectDate;
	private Date shipmentDate;
	private String ESugamaNumber;
	private double declaredValue;
	private boolean recurring;
	private String courierName;
	private String courierNo;
	private Date customerPoDate;
	private String supplierrefno;
	private double convertionRate;
	private String recinvoiceName;
	private Set<InvoiceItem> invoiceItems = new HashSet<InvoiceItem>(0);
	private Set<Recievable> recievables = new HashSet<Recievable>(0);
	private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);
	private Set<InvoiceHeader> invoiceHeaders_1 = new HashSet<InvoiceHeader>(0);
	private Set<Recievable> recievables_1 = new HashSet<Recievable>(0);
	private Set<InvoiceItem> invoiceItems_1 = new HashSet<InvoiceItem>(0);

	public InvoiceHeader() {
	}

	public InvoiceHeader(long id, boolean customerAcceptance, boolean isRevised, double declaredValue,
			boolean recurring, double convertionRate) {
		this.id = id;
		this.customerAcceptance = customerAcceptance;
		this.isRevised = isRevised;
		this.declaredValue = declaredValue;
		this.recurring = recurring;
		this.convertionRate = convertionRate;
	}

	public InvoiceHeader(long id, AccountAddress accountAddressByBillingFk, AccountAddress accountAddressByShippingFk,
			AccountDetail accountDetailByToShipAccountFk, AccountDetail accountDetailByAccountFk, CrmType crmType,
			Currency currency, DeliveryChallan deliveryChallan, Domain domain, InvoiceHeader invoiceHeader,
			Organisation organisation, OrgBankDetail orgBankDetail, OrgLocation orgLocation,
			PersonDetail personDetailByPersonFk, PersonDetail personDetailByFinanceContactFk,
			SalesOrderHeader salesOrderHeader, StatusItem statusItem, UserDetails userDetailsByCreatedBy,
			UserDetails userDetailsByLastModifiedBy, Date acceptedDate, String contactEmail, String contactPhnNo,
			Date createdDate, String custPoNo, boolean customerAcceptance, String customerRejectReason,
			Long deliveryTerms, String destination, String dispatchThrough, String docSequence, String financeEmail,
			String financePhnNo, String guid, String invoiceName, boolean isRevised, Date lastModifiedDate,
			Long paymnetTerms, String remarks, String approveRejectReason, Date approveRejectDate, Date shipmentDate,
			String ESugamaNumber, double declaredValue, boolean recurring, String courierName, String courierNo,
			Date customerPoDate, String supplierrefno, double convertionRate, String recinvoiceName,
			Set<InvoiceItem> invoiceItems, Set<Recievable> recievables, Set<InvoiceHeader> invoiceHeaders,
			Set<InvoiceHeader> invoiceHeaders_1, Set<Recievable> recievables_1, Set<InvoiceItem> invoiceItems_1) {
		this.id = id;
		this.accountAddressByBillingFk = accountAddressByBillingFk;
		this.accountAddressByShippingFk = accountAddressByShippingFk;
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
		this.accountDetailByAccountFk = accountDetailByAccountFk;
		this.crmType = crmType;
		this.currency = currency;
		this.deliveryChallan = deliveryChallan;
		this.domain = domain;
		this.invoiceHeader = invoiceHeader;
		this.organisation = organisation;
		this.orgBankDetail = orgBankDetail;
		this.orgLocation = orgLocation;
		this.personDetailByPersonFk = personDetailByPersonFk;
		this.personDetailByFinanceContactFk = personDetailByFinanceContactFk;
		this.salesOrderHeader = salesOrderHeader;
		this.statusItem = statusItem;
		this.userDetailsByCreatedBy = userDetailsByCreatedBy;
		this.userDetailsByLastModifiedBy = userDetailsByLastModifiedBy;
		this.acceptedDate = acceptedDate;
		this.contactEmail = contactEmail;
		this.contactPhnNo = contactPhnNo;
		this.createdDate = createdDate;
		this.custPoNo = custPoNo;
		this.customerAcceptance = customerAcceptance;
		this.customerRejectReason = customerRejectReason;
		this.deliveryTerms = deliveryTerms;
		this.destination = destination;
		this.dispatchThrough = dispatchThrough;
		this.docSequence = docSequence;
		this.financeEmail = financeEmail;
		this.financePhnNo = financePhnNo;
		this.guid = guid;
		this.invoiceName = invoiceName;
		this.isRevised = isRevised;
		this.lastModifiedDate = lastModifiedDate;
		this.paymnetTerms = paymnetTerms;
		this.remarks = remarks;
		this.approveRejectReason = approveRejectReason;
		this.approveRejectDate = approveRejectDate;
		this.shipmentDate = shipmentDate;
		this.ESugamaNumber = ESugamaNumber;
		this.declaredValue = declaredValue;
		this.recurring = recurring;
		this.courierName = courierName;
		this.courierNo = courierNo;
		this.customerPoDate = customerPoDate;
		this.supplierrefno = supplierrefno;
		this.convertionRate = convertionRate;
		this.recinvoiceName = recinvoiceName;
		this.invoiceItems = invoiceItems;
		this.recievables = recievables;
		this.invoiceHeaders = invoiceHeaders;
		this.invoiceHeaders_1 = invoiceHeaders_1;
		this.recievables_1 = recievables_1;
		this.invoiceItems_1 = invoiceItems_1;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BILLING_FK")
	public AccountAddress getAccountAddressByBillingFk() {
		return this.accountAddressByBillingFk;
	}

	public void setAccountAddressByBillingFk(AccountAddress accountAddressByBillingFk) {
		this.accountAddressByBillingFk = accountAddressByBillingFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIPPING_FK")
	public AccountAddress getAccountAddressByShippingFk() {
		return this.accountAddressByShippingFk;
	}

	public void setAccountAddressByShippingFk(AccountAddress accountAddressByShippingFk) {
		this.accountAddressByShippingFk = accountAddressByShippingFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TO_SHIP_ACCOUNT_FK")
	public AccountDetail getAccountDetailByToShipAccountFk() {
		return this.accountDetailByToShipAccountFk;
	}

	public void setAccountDetailByToShipAccountFk(AccountDetail accountDetailByToShipAccountFk) {
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACCOUNT_FK")
	public AccountDetail getAccountDetailByAccountFk() {
		return this.accountDetailByAccountFk;
	}

	public void setAccountDetailByAccountFk(AccountDetail accountDetailByAccountFk) {
		this.accountDetailByAccountFk = accountDetailByAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INVOICE_TYPE_FK")
	public CrmType getCrmType() {
		return this.crmType;
	}

	public void setCrmType(CrmType crmType) {
		this.crmType = crmType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CURRENCY_FK")
	public Currency getCurrency() {
		return this.currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DELIVERY_CHALLAN_FK")
	public DeliveryChallan getDeliveryChallan() {
		return this.deliveryChallan;
	}

	public void setDeliveryChallan(DeliveryChallan deliveryChallan) {
		this.deliveryChallan = deliveryChallan;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RECINVOICE_REF_KEY")
	public InvoiceHeader getInvoiceHeader() {
		return this.invoiceHeader;
	}

	public void setInvoiceHeader(InvoiceHeader invoiceHeader) {
		this.invoiceHeader = invoiceHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_FK")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORGBANK_ID_OID")
	public OrgBankDetail getOrgBankDetail() {
		return this.orgBankDetail;
	}

	public void setOrgBankDetail(OrgBankDetail orgBankDetail) {
		this.orgBankDetail = orgBankDetail;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_LOCATION_FK")
	public OrgLocation getOrgLocation() {
		return this.orgLocation;
	}

	public void setOrgLocation(OrgLocation orgLocation) {
		this.orgLocation = orgLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSON_FK")
	public PersonDetail getPersonDetailByPersonFk() {
		return this.personDetailByPersonFk;
	}

	public void setPersonDetailByPersonFk(PersonDetail personDetailByPersonFk) {
		this.personDetailByPersonFk = personDetailByPersonFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FINANCE_CONTACT_FK")
	public PersonDetail getPersonDetailByFinanceContactFk() {
		return this.personDetailByFinanceContactFk;
	}

	public void setPersonDetailByFinanceContactFk(PersonDetail personDetailByFinanceContactFk) {
		this.personDetailByFinanceContactFk = personDetailByFinanceContactFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SALES_ORDER_FK")
	public SalesOrderHeader getSalesOrderHeader() {
		return this.salesOrderHeader;
	}

	public void setSalesOrderHeader(SalesOrderHeader salesOrderHeader) {
		this.salesOrderHeader = salesOrderHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INVOICE_STATUS_FK")
	public StatusItem getStatusItem() {
		return this.statusItem;
	}

	public void setStatusItem(StatusItem statusItem) {
		this.statusItem = statusItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public UserDetails getUserDetailsByCreatedBy() {
		return this.userDetailsByCreatedBy;
	}

	public void setUserDetailsByCreatedBy(UserDetails userDetailsByCreatedBy) {
		this.userDetailsByCreatedBy = userDetailsByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY")
	public UserDetails getUserDetailsByLastModifiedBy() {
		return this.userDetailsByLastModifiedBy;
	}

	public void setUserDetailsByLastModifiedBy(UserDetails userDetailsByLastModifiedBy) {
		this.userDetailsByLastModifiedBy = userDetailsByLastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ACCEPTED_DATE", length = 19)
	public Date getAcceptedDate() {
		return this.acceptedDate;
	}

	public void setAcceptedDate(Date acceptedDate) {
		this.acceptedDate = acceptedDate;
	}

	@Column(name = "CONTACT_EMAIL")
	public String getContactEmail() {
		return this.contactEmail;
	}

	public void setContactEmail(String contactEmail) {
		this.contactEmail = contactEmail;
	}

	@Column(name = "CONTACT_PHN_NO")
	public String getContactPhnNo() {
		return this.contactPhnNo;
	}

	public void setContactPhnNo(String contactPhnNo) {
		this.contactPhnNo = contactPhnNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CUST_PO_NO")
	public String getCustPoNo() {
		return this.custPoNo;
	}

	public void setCustPoNo(String custPoNo) {
		this.custPoNo = custPoNo;
	}

	@Column(name = "CUSTOMER_ACCEPTANCE", nullable = false)
	public boolean isCustomerAcceptance() {
		return this.customerAcceptance;
	}

	public void setCustomerAcceptance(boolean customerAcceptance) {
		this.customerAcceptance = customerAcceptance;
	}

	@Column(name = "CUSTOMER_REJECT_REASON")
	public String getCustomerRejectReason() {
		return this.customerRejectReason;
	}

	public void setCustomerRejectReason(String customerRejectReason) {
		this.customerRejectReason = customerRejectReason;
	}

	@Column(name = "DELIVERY_TERMS")
	public Long getDeliveryTerms() {
		return this.deliveryTerms;
	}

	public void setDeliveryTerms(Long deliveryTerms) {
		this.deliveryTerms = deliveryTerms;
	}

	@Column(name = "DESTINATION")
	public String getDestination() {
		return this.destination;
	}

	public void setDestination(String destination) {
		this.destination = destination;
	}

	@Column(name = "DISPATCH_THROUGH")
	public String getDispatchThrough() {
		return this.dispatchThrough;
	}

	public void setDispatchThrough(String dispatchThrough) {
		this.dispatchThrough = dispatchThrough;
	}

	@Column(name = "DOC_SEQUENCE")
	public String getDocSequence() {
		return this.docSequence;
	}

	public void setDocSequence(String docSequence) {
		this.docSequence = docSequence;
	}

	@Column(name = "FINANCE_EMAIL")
	public String getFinanceEmail() {
		return this.financeEmail;
	}

	public void setFinanceEmail(String financeEmail) {
		this.financeEmail = financeEmail;
	}

	@Column(name = "FINANCE_PHN_NO")
	public String getFinancePhnNo() {
		return this.financePhnNo;
	}

	public void setFinancePhnNo(String financePhnNo) {
		this.financePhnNo = financePhnNo;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Column(name = "INVOICE_NAME")
	public String getInvoiceName() {
		return this.invoiceName;
	}

	public void setInvoiceName(String invoiceName) {
		this.invoiceName = invoiceName;
	}

	@Column(name = "IS_REVISED", nullable = false)
	public boolean isIsRevised() {
		return this.isRevised;
	}

	public void setIsRevised(boolean isRevised) {
		this.isRevised = isRevised;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "PAYMNET_TERMS")
	public Long getPaymnetTerms() {
		return this.paymnetTerms;
	}

	public void setPaymnetTerms(Long paymnetTerms) {
		this.paymnetTerms = paymnetTerms;
	}

	@Column(name = "REMARKS", length = 16777215)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "APPROVE_REJECT_REASON")
	public String getApproveRejectReason() {
		return this.approveRejectReason;
	}

	public void setApproveRejectReason(String approveRejectReason) {
		this.approveRejectReason = approveRejectReason;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "APPROVE_REJECT_DATE", length = 19)
	public Date getApproveRejectDate() {
		return this.approveRejectDate;
	}

	public void setApproveRejectDate(Date approveRejectDate) {
		this.approveRejectDate = approveRejectDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SHIPMENT_DATE", length = 19)
	public Date getShipmentDate() {
		return this.shipmentDate;
	}

	public void setShipmentDate(Date shipmentDate) {
		this.shipmentDate = shipmentDate;
	}

	@Column(name = "E_SUGAMA_NUMBER")
	public String getESugamaNumber() {
		return this.ESugamaNumber;
	}

	public void setESugamaNumber(String ESugamaNumber) {
		this.ESugamaNumber = ESugamaNumber;
	}

	@Column(name = "DECLARED_VALUE", nullable = false, precision = 22, scale = 0)
	public double getDeclaredValue() {
		return this.declaredValue;
	}

	public void setDeclaredValue(double declaredValue) {
		this.declaredValue = declaredValue;
	}

	@Column(name = "RECURRING", nullable = false)
	public boolean isRecurring() {
		return this.recurring;
	}

	public void setRecurring(boolean recurring) {
		this.recurring = recurring;
	}

	@Column(name = "COURIER_NAME")
	public String getCourierName() {
		return this.courierName;
	}

	public void setCourierName(String courierName) {
		this.courierName = courierName;
	}

	@Column(name = "COURIER_NO")
	public String getCourierNo() {
		return this.courierNo;
	}

	public void setCourierNo(String courierNo) {
		this.courierNo = courierNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CUSTOMER_PO_DATE", length = 19)
	public Date getCustomerPoDate() {
		return this.customerPoDate;
	}

	public void setCustomerPoDate(Date customerPoDate) {
		this.customerPoDate = customerPoDate;
	}

	@Column(name = "SUPPLIERREFNO")
	public String getSupplierrefno() {
		return this.supplierrefno;
	}

	public void setSupplierrefno(String supplierrefno) {
		this.supplierrefno = supplierrefno;
	}

	@Column(name = "CONVERTION_RATE", nullable = false, precision = 22, scale = 0)
	public double getConvertionRate() {
		return this.convertionRate;
	}

	public void setConvertionRate(double convertionRate) {
		this.convertionRate = convertionRate;
	}

	@Column(name = "RECINVOICE_NAME")
	public String getRecinvoiceName() {
		return this.recinvoiceName;
	}

	public void setRecinvoiceName(String recinvoiceName) {
		this.recinvoiceName = recinvoiceName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoiceHeader")
	public Set<InvoiceItem> getInvoiceItems() {
		return this.invoiceItems;
	}

	public void setInvoiceItems(Set<InvoiceItem> invoiceItems) {
		this.invoiceItems = invoiceItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoiceHeader")
	public Set<Recievable> getRecievables() {
		return this.recievables;
	}

	public void setRecievables(Set<Recievable> recievables) {
		this.recievables = recievables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoiceHeader")
	public Set<InvoiceHeader> getInvoiceHeaders() {
		return this.invoiceHeaders;
	}

	public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
		this.invoiceHeaders = invoiceHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoiceHeader")
	public Set<InvoiceHeader> getInvoiceHeaders_1() {
		return this.invoiceHeaders_1;
	}

	public void setInvoiceHeaders_1(Set<InvoiceHeader> invoiceHeaders_1) {
		this.invoiceHeaders_1 = invoiceHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoiceHeader")
	public Set<Recievable> getRecievables_1() {
		return this.recievables_1;
	}

	public void setRecievables_1(Set<Recievable> recievables_1) {
		this.recievables_1 = recievables_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoiceHeader")
	public Set<InvoiceItem> getInvoiceItems_1() {
		return this.invoiceItems_1;
	}

	public void setInvoiceItems_1(Set<InvoiceItem> invoiceItems_1) {
		this.invoiceItems_1 = invoiceItems_1;
	}

}
