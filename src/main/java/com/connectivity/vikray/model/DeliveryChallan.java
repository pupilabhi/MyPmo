package com.connectivity.vikray.model;
// Generated 6 Dec, 2018 11:37:25 AM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DeliveryChallan generated by hbm2java
 */
@Entity
@Table(name = "DELIVERY_CHALLAN", catalog = "namcrm")
public class DeliveryChallan implements java.io.Serializable {

	private long id;
	private AccountAddress accountAddressByBillingFk;
	private AccountAddress accountAddressByShippingFk;
	private AccountDetail accountDetailByAccountFk;
	private AccountDetail accountDetailByToShipAccountFk;
	private CrmType crmTypeByDcPurposeTypeFk;
	private CrmType crmTypeByDcTypeFk;
	private DeliveryChallan deliveryChallan;
	private Domain domain;
	private Organisation organisation;
	private OrganisationAddress organisationAddress;
	private OrgLocation orgLocation;
	private PersonDetail personDetailByShippingContactFk;
	private PersonDetail personDetailByPersonFk;
	private QuoteHeader quoteHeader;
	private SalesOrderHeader salesOrderHeader;
	private StatusItem statusItem;
	private UserDetails userDetailsByLastModifiedByUserFk;
	private UserDetails userDetailsByCreatedByUserFk;
	private Date acceptRejectDate;
	private String courierName;
	private String courierNo;
	private Date createdDate;
	private boolean customerAcceptance;
	private String customerPoNo;
	private String customerRejectReason;
	private double declaredValue;
	private String destination;
	private String dispatchThrough;
	private String ESugamaNumber;
	private String guid;
	private boolean isRevised;
	private Date lastModifiedDate;
	private String name;
	private String personEmail;
	private String personPhone;
	private String shippingEmail;
	private String shippingPhone;
	private Long termOfDelivery;
	private Long termOfPayment;
	private String remarks;
	private String approveRejectReason;
	private Date approveRejectDate;
	private String docSequence;
	private Date shipmentDate;
	private String soName;
	private String location;
	private String rdcName;
	private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);
	private Set<InvoiceHeader> invoiceHeaders_1 = new HashSet<InvoiceHeader>(0);
	private Set<DeliveryChallan> deliveryChallans = new HashSet<DeliveryChallan>(0);
	private Set<DeliveryChallan> deliveryChallans_1 = new HashSet<DeliveryChallan>(0);

	public DeliveryChallan() {
	}

	public DeliveryChallan(long id, boolean customerAcceptance, double declaredValue, boolean isRevised) {
		this.id = id;
		this.customerAcceptance = customerAcceptance;
		this.declaredValue = declaredValue;
		this.isRevised = isRevised;
	}

	public DeliveryChallan(long id, AccountAddress accountAddressByBillingFk, AccountAddress accountAddressByShippingFk,
			AccountDetail accountDetailByAccountFk, AccountDetail accountDetailByToShipAccountFk,
			CrmType crmTypeByDcPurposeTypeFk, CrmType crmTypeByDcTypeFk, DeliveryChallan deliveryChallan, Domain domain,
			Organisation organisation, OrganisationAddress organisationAddress, OrgLocation orgLocation,
			PersonDetail personDetailByShippingContactFk, PersonDetail personDetailByPersonFk, QuoteHeader quoteHeader,
			SalesOrderHeader salesOrderHeader, StatusItem statusItem, UserDetails userDetailsByLastModifiedByUserFk,
			UserDetails userDetailsByCreatedByUserFk, Date acceptRejectDate, String courierName, String courierNo,
			Date createdDate, boolean customerAcceptance, String customerPoNo, String customerRejectReason,
			double declaredValue, String destination, String dispatchThrough, String ESugamaNumber, String guid,
			boolean isRevised, Date lastModifiedDate, String name, String personEmail, String personPhone,
			String shippingEmail, String shippingPhone, Long termOfDelivery, Long termOfPayment, String remarks,
			String approveRejectReason, Date approveRejectDate, String docSequence, Date shipmentDate, String soName,
			String location, String rdcName, Set<InvoiceHeader> invoiceHeaders, Set<InvoiceHeader> invoiceHeaders_1,
			Set<DeliveryChallan> deliveryChallans, Set<DeliveryChallan> deliveryChallans_1) {
		this.id = id;
		this.accountAddressByBillingFk = accountAddressByBillingFk;
		this.accountAddressByShippingFk = accountAddressByShippingFk;
		this.accountDetailByAccountFk = accountDetailByAccountFk;
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
		this.crmTypeByDcPurposeTypeFk = crmTypeByDcPurposeTypeFk;
		this.crmTypeByDcTypeFk = crmTypeByDcTypeFk;
		this.deliveryChallan = deliveryChallan;
		this.domain = domain;
		this.organisation = organisation;
		this.organisationAddress = organisationAddress;
		this.orgLocation = orgLocation;
		this.personDetailByShippingContactFk = personDetailByShippingContactFk;
		this.personDetailByPersonFk = personDetailByPersonFk;
		this.quoteHeader = quoteHeader;
		this.salesOrderHeader = salesOrderHeader;
		this.statusItem = statusItem;
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
		this.acceptRejectDate = acceptRejectDate;
		this.courierName = courierName;
		this.courierNo = courierNo;
		this.createdDate = createdDate;
		this.customerAcceptance = customerAcceptance;
		this.customerPoNo = customerPoNo;
		this.customerRejectReason = customerRejectReason;
		this.declaredValue = declaredValue;
		this.destination = destination;
		this.dispatchThrough = dispatchThrough;
		this.ESugamaNumber = ESugamaNumber;
		this.guid = guid;
		this.isRevised = isRevised;
		this.lastModifiedDate = lastModifiedDate;
		this.name = name;
		this.personEmail = personEmail;
		this.personPhone = personPhone;
		this.shippingEmail = shippingEmail;
		this.shippingPhone = shippingPhone;
		this.termOfDelivery = termOfDelivery;
		this.termOfPayment = termOfPayment;
		this.remarks = remarks;
		this.approveRejectReason = approveRejectReason;
		this.approveRejectDate = approveRejectDate;
		this.docSequence = docSequence;
		this.shipmentDate = shipmentDate;
		this.soName = soName;
		this.location = location;
		this.rdcName = rdcName;
		this.invoiceHeaders = invoiceHeaders;
		this.invoiceHeaders_1 = invoiceHeaders_1;
		this.deliveryChallans = deliveryChallans;
		this.deliveryChallans_1 = deliveryChallans_1;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BILLING_FK")
	public AccountAddress getAccountAddressByBillingFk() {
		return this.accountAddressByBillingFk;
	}

	public void setAccountAddressByBillingFk(AccountAddress accountAddressByBillingFk) {
		this.accountAddressByBillingFk = accountAddressByBillingFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIPPING_FK")
	public AccountAddress getAccountAddressByShippingFk() {
		return this.accountAddressByShippingFk;
	}

	public void setAccountAddressByShippingFk(AccountAddress accountAddressByShippingFk) {
		this.accountAddressByShippingFk = accountAddressByShippingFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACCOUNT_FK")
	public AccountDetail getAccountDetailByAccountFk() {
		return this.accountDetailByAccountFk;
	}

	public void setAccountDetailByAccountFk(AccountDetail accountDetailByAccountFk) {
		this.accountDetailByAccountFk = accountDetailByAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TO_SHIP_ACCOUNT_FK")
	public AccountDetail getAccountDetailByToShipAccountFk() {
		return this.accountDetailByToShipAccountFk;
	}

	public void setAccountDetailByToShipAccountFk(AccountDetail accountDetailByToShipAccountFk) {
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DC_PURPOSE_TYPE_FK")
	public CrmType getCrmTypeByDcPurposeTypeFk() {
		return this.crmTypeByDcPurposeTypeFk;
	}

	public void setCrmTypeByDcPurposeTypeFk(CrmType crmTypeByDcPurposeTypeFk) {
		this.crmTypeByDcPurposeTypeFk = crmTypeByDcPurposeTypeFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DC_TYPE_FK")
	public CrmType getCrmTypeByDcTypeFk() {
		return this.crmTypeByDcTypeFk;
	}

	public void setCrmTypeByDcTypeFk(CrmType crmTypeByDcTypeFk) {
		this.crmTypeByDcTypeFk = crmTypeByDcTypeFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RDC_REF_KEY")
	public DeliveryChallan getDeliveryChallan() {
		return this.deliveryChallan;
	}

	public void setDeliveryChallan(DeliveryChallan deliveryChallan) {
		this.deliveryChallan = deliveryChallan;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORGANISATION_FK")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_BILLING_FK")
	public OrganisationAddress getOrganisationAddress() {
		return this.organisationAddress;
	}

	public void setOrganisationAddress(OrganisationAddress organisationAddress) {
		this.organisationAddress = organisationAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_LOCATION_FK")
	public OrgLocation getOrgLocation() {
		return this.orgLocation;
	}

	public void setOrgLocation(OrgLocation orgLocation) {
		this.orgLocation = orgLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIPPING_CONTACT_FK")
	public PersonDetail getPersonDetailByShippingContactFk() {
		return this.personDetailByShippingContactFk;
	}

	public void setPersonDetailByShippingContactFk(PersonDetail personDetailByShippingContactFk) {
		this.personDetailByShippingContactFk = personDetailByShippingContactFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSON_FK")
	public PersonDetail getPersonDetailByPersonFk() {
		return this.personDetailByPersonFk;
	}

	public void setPersonDetailByPersonFk(PersonDetail personDetailByPersonFk) {
		this.personDetailByPersonFk = personDetailByPersonFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUOTE_HEADER_FK")
	public QuoteHeader getQuoteHeader() {
		return this.quoteHeader;
	}

	public void setQuoteHeader(QuoteHeader quoteHeader) {
		this.quoteHeader = quoteHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SALES_ORDER_FK")
	public SalesOrderHeader getSalesOrderHeader() {
		return this.salesOrderHeader;
	}

	public void setSalesOrderHeader(SalesOrderHeader salesOrderHeader) {
		this.salesOrderHeader = salesOrderHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DC_STATUS_FK")
	public StatusItem getStatusItem() {
		return this.statusItem;
	}

	public void setStatusItem(StatusItem statusItem) {
		this.statusItem = statusItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY_USER_FK")
	public UserDetails getUserDetailsByLastModifiedByUserFk() {
		return this.userDetailsByLastModifiedByUserFk;
	}

	public void setUserDetailsByLastModifiedByUserFk(UserDetails userDetailsByLastModifiedByUserFk) {
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY_USER_FK")
	public UserDetails getUserDetailsByCreatedByUserFk() {
		return this.userDetailsByCreatedByUserFk;
	}

	public void setUserDetailsByCreatedByUserFk(UserDetails userDetailsByCreatedByUserFk) {
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ACCEPT_REJECT_DATE", length = 19)
	public Date getAcceptRejectDate() {
		return this.acceptRejectDate;
	}

	public void setAcceptRejectDate(Date acceptRejectDate) {
		this.acceptRejectDate = acceptRejectDate;
	}

	@Column(name = "COURIER_NAME")
	public String getCourierName() {
		return this.courierName;
	}

	public void setCourierName(String courierName) {
		this.courierName = courierName;
	}

	@Column(name = "COURIER_NO")
	public String getCourierNo() {
		return this.courierNo;
	}

	public void setCourierNo(String courierNo) {
		this.courierNo = courierNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CUSTOMER_ACCEPTANCE", nullable = false)
	public boolean isCustomerAcceptance() {
		return this.customerAcceptance;
	}

	public void setCustomerAcceptance(boolean customerAcceptance) {
		this.customerAcceptance = customerAcceptance;
	}

	@Column(name = "CUSTOMER_PO_NO")
	public String getCustomerPoNo() {
		return this.customerPoNo;
	}

	public void setCustomerPoNo(String customerPoNo) {
		this.customerPoNo = customerPoNo;
	}

	@Column(name = "CUSTOMER_REJECT_REASON")
	public String getCustomerRejectReason() {
		return this.customerRejectReason;
	}

	public void setCustomerRejectReason(String customerRejectReason) {
		this.customerRejectReason = customerRejectReason;
	}

	@Column(name = "DECLARED_VALUE", nullable = false, precision = 22, scale = 0)
	public double getDeclaredValue() {
		return this.declaredValue;
	}

	public void setDeclaredValue(double declaredValue) {
		this.declaredValue = declaredValue;
	}

	@Column(name = "DESTINATION")
	public String getDestination() {
		return this.destination;
	}

	public void setDestination(String destination) {
		this.destination = destination;
	}

	@Column(name = "DISPATCH_THROUGH")
	public String getDispatchThrough() {
		return this.dispatchThrough;
	}

	public void setDispatchThrough(String dispatchThrough) {
		this.dispatchThrough = dispatchThrough;
	}

	@Column(name = "E_SUGAMA_NUMBER")
	public String getESugamaNumber() {
		return this.ESugamaNumber;
	}

	public void setESugamaNumber(String ESugamaNumber) {
		this.ESugamaNumber = ESugamaNumber;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Column(name = "IS_REVISED", nullable = false)
	public boolean isIsRevised() {
		return this.isRevised;
	}

	public void setIsRevised(boolean isRevised) {
		this.isRevised = isRevised;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "NAME")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "PERSON_EMAIL")
	public String getPersonEmail() {
		return this.personEmail;
	}

	public void setPersonEmail(String personEmail) {
		this.personEmail = personEmail;
	}

	@Column(name = "PERSON_PHONE")
	public String getPersonPhone() {
		return this.personPhone;
	}

	public void setPersonPhone(String personPhone) {
		this.personPhone = personPhone;
	}

	@Column(name = "SHIPPING_EMAIL")
	public String getShippingEmail() {
		return this.shippingEmail;
	}

	public void setShippingEmail(String shippingEmail) {
		this.shippingEmail = shippingEmail;
	}

	@Column(name = "SHIPPING_PHONE")
	public String getShippingPhone() {
		return this.shippingPhone;
	}

	public void setShippingPhone(String shippingPhone) {
		this.shippingPhone = shippingPhone;
	}

	@Column(name = "TERM_OF_DELIVERY")
	public Long getTermOfDelivery() {
		return this.termOfDelivery;
	}

	public void setTermOfDelivery(Long termOfDelivery) {
		this.termOfDelivery = termOfDelivery;
	}

	@Column(name = "TERM_OF_PAYMENT")
	public Long getTermOfPayment() {
		return this.termOfPayment;
	}

	public void setTermOfPayment(Long termOfPayment) {
		this.termOfPayment = termOfPayment;
	}

	@Column(name = "REMARKS")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "APPROVE_REJECT_REASON")
	public String getApproveRejectReason() {
		return this.approveRejectReason;
	}

	public void setApproveRejectReason(String approveRejectReason) {
		this.approveRejectReason = approveRejectReason;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "APPROVE_REJECT_DATE", length = 19)
	public Date getApproveRejectDate() {
		return this.approveRejectDate;
	}

	public void setApproveRejectDate(Date approveRejectDate) {
		this.approveRejectDate = approveRejectDate;
	}

	@Column(name = "DOC_SEQUENCE")
	public String getDocSequence() {
		return this.docSequence;
	}

	public void setDocSequence(String docSequence) {
		this.docSequence = docSequence;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SHIPMENT_DATE", length = 19)
	public Date getShipmentDate() {
		return this.shipmentDate;
	}

	public void setShipmentDate(Date shipmentDate) {
		this.shipmentDate = shipmentDate;
	}

	@Column(name = "SO_NAME")
	public String getSoName() {
		return this.soName;
	}

	public void setSoName(String soName) {
		this.soName = soName;
	}

	@Column(name = "LOCATION")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "RDC_NAME")
	public String getRdcName() {
		return this.rdcName;
	}

	public void setRdcName(String rdcName) {
		this.rdcName = rdcName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliveryChallan")
	public Set<InvoiceHeader> getInvoiceHeaders() {
		return this.invoiceHeaders;
	}

	public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
		this.invoiceHeaders = invoiceHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliveryChallan")
	public Set<InvoiceHeader> getInvoiceHeaders_1() {
		return this.invoiceHeaders_1;
	}

	public void setInvoiceHeaders_1(Set<InvoiceHeader> invoiceHeaders_1) {
		this.invoiceHeaders_1 = invoiceHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliveryChallan")
	public Set<DeliveryChallan> getDeliveryChallans() {
		return this.deliveryChallans;
	}

	public void setDeliveryChallans(Set<DeliveryChallan> deliveryChallans) {
		this.deliveryChallans = deliveryChallans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliveryChallan")
	public Set<DeliveryChallan> getDeliveryChallans_1() {
		return this.deliveryChallans_1;
	}

	public void setDeliveryChallans_1(Set<DeliveryChallan> deliveryChallans_1) {
		this.deliveryChallans_1 = deliveryChallans_1;
	}

}
