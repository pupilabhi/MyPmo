package com.connectivity.vikray.entity;
// Generated 6 Dec, 2018 11:37:25 AM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PurchaseEntry generated by hbm2java
 */
@Entity
@Table(name = "PURCHASE_ENTRY", catalog = "namcrm")
public class PurchaseEntry implements java.io.Serializable {

	private long id;
	private AccountAddress accountAddress;
	private AccountDetail accountDetail;
	private Currency currency;
	private Domain domain;
	private GrnHeader grnHeader;
	private Organisation organisation;
	private OrganisationAddress organisationAddress;
	private OrgLocation orgLocation;
	private PersonDetail personDetail;
	private PurchaseOrderHeader purchaseOrderHeader;
	private SalesOrderHeader salesOrderHeader;
	private StatusItem statusItem;
	private UserDetails userDetailsByLastModifiedByUserFk;
	private UserDetails userDetailsByCreatedBy;
	private Date createdDate;
	private Double freightInferred;
	private String guid;
	private Date lastModifiedDate;
	private Double miscellaneousAmount;
	private String purchaseEntryName;
	private double vendorInvoiceAmt;
	private Date vendorInvoiceDate;
	private String vendorInvoiceNo;
	private double convertionRate;
	private Set<GrnItem> grnItems = new HashSet<GrnItem>(0);
	private Set<GrnItem> grnItems_1 = new HashSet<GrnItem>(0);

	public PurchaseEntry() {
	}

	public PurchaseEntry(long id, double vendorInvoiceAmt, double convertionRate) {
		this.id = id;
		this.vendorInvoiceAmt = vendorInvoiceAmt;
		this.convertionRate = convertionRate;
	}

	public PurchaseEntry(long id, AccountAddress accountAddress, AccountDetail accountDetail, Currency currency,
			Domain domain, GrnHeader grnHeader, Organisation organisation, OrganisationAddress organisationAddress,
			OrgLocation orgLocation, PersonDetail personDetail, PurchaseOrderHeader purchaseOrderHeader,
			SalesOrderHeader salesOrderHeader, StatusItem statusItem, UserDetails userDetailsByLastModifiedByUserFk,
			UserDetails userDetailsByCreatedBy, Date createdDate, Double freightInferred, String guid,
			Date lastModifiedDate, Double miscellaneousAmount, String purchaseEntryName, double vendorInvoiceAmt,
			Date vendorInvoiceDate, String vendorInvoiceNo, double convertionRate, Set<GrnItem> grnItems,
			Set<GrnItem> grnItems_1) {
		this.id = id;
		this.accountAddress = accountAddress;
		this.accountDetail = accountDetail;
		this.currency = currency;
		this.domain = domain;
		this.grnHeader = grnHeader;
		this.organisation = organisation;
		this.organisationAddress = organisationAddress;
		this.orgLocation = orgLocation;
		this.personDetail = personDetail;
		this.purchaseOrderHeader = purchaseOrderHeader;
		this.salesOrderHeader = salesOrderHeader;
		this.statusItem = statusItem;
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
		this.userDetailsByCreatedBy = userDetailsByCreatedBy;
		this.createdDate = createdDate;
		this.freightInferred = freightInferred;
		this.guid = guid;
		this.lastModifiedDate = lastModifiedDate;
		this.miscellaneousAmount = miscellaneousAmount;
		this.purchaseEntryName = purchaseEntryName;
		this.vendorInvoiceAmt = vendorInvoiceAmt;
		this.vendorInvoiceDate = vendorInvoiceDate;
		this.vendorInvoiceNo = vendorInvoiceNo;
		this.convertionRate = convertionRate;
		this.grnItems = grnItems;
		this.grnItems_1 = grnItems_1;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VENDOR_ADDRESS_FK")
	public AccountAddress getAccountAddress() {
		return this.accountAddress;
	}

	public void setAccountAddress(AccountAddress accountAddress) {
		this.accountAddress = accountAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VENDOR_FK")
	public AccountDetail getAccountDetail() {
		return this.accountDetail;
	}

	public void setAccountDetail(AccountDetail accountDetail) {
		this.accountDetail = accountDetail;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CURRENCY_FK")
	public Currency getCurrency() {
		return this.currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GRN_FK")
	public GrnHeader getGrnHeader() {
		return this.grnHeader;
	}

	public void setGrnHeader(GrnHeader grnHeader) {
		this.grnHeader = grnHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_FK")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_ADDRESS_FK")
	public OrganisationAddress getOrganisationAddress() {
		return this.organisationAddress;
	}

	public void setOrganisationAddress(OrganisationAddress organisationAddress) {
		this.organisationAddress = organisationAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_LOCATION_FK")
	public OrgLocation getOrgLocation() {
		return this.orgLocation;
	}

	public void setOrgLocation(OrgLocation orgLocation) {
		this.orgLocation = orgLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VENDOR_CONTACT_FK")
	public PersonDetail getPersonDetail() {
		return this.personDetail;
	}

	public void setPersonDetail(PersonDetail personDetail) {
		this.personDetail = personDetail;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PURCHASE_ORDER_FK")
	public PurchaseOrderHeader getPurchaseOrderHeader() {
		return this.purchaseOrderHeader;
	}

	public void setPurchaseOrderHeader(PurchaseOrderHeader purchaseOrderHeader) {
		this.purchaseOrderHeader = purchaseOrderHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SALES_ORDER_FK")
	public SalesOrderHeader getSalesOrderHeader() {
		return this.salesOrderHeader;
	}

	public void setSalesOrderHeader(SalesOrderHeader salesOrderHeader) {
		this.salesOrderHeader = salesOrderHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PE_STATUS")
	public StatusItem getStatusItem() {
		return this.statusItem;
	}

	public void setStatusItem(StatusItem statusItem) {
		this.statusItem = statusItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY_USER_FK")
	public UserDetails getUserDetailsByLastModifiedByUserFk() {
		return this.userDetailsByLastModifiedByUserFk;
	}

	public void setUserDetailsByLastModifiedByUserFk(UserDetails userDetailsByLastModifiedByUserFk) {
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public UserDetails getUserDetailsByCreatedBy() {
		return this.userDetailsByCreatedBy;
	}

	public void setUserDetailsByCreatedBy(UserDetails userDetailsByCreatedBy) {
		this.userDetailsByCreatedBy = userDetailsByCreatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "FREIGHT_INFERRED", precision = 22, scale = 0)
	public Double getFreightInferred() {
		return this.freightInferred;
	}

	public void setFreightInferred(Double freightInferred) {
		this.freightInferred = freightInferred;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "MISCELLANEOUS_AMOUNT", precision = 22, scale = 0)
	public Double getMiscellaneousAmount() {
		return this.miscellaneousAmount;
	}

	public void setMiscellaneousAmount(Double miscellaneousAmount) {
		this.miscellaneousAmount = miscellaneousAmount;
	}

	@Column(name = "PURCHASE_ENTRY_NAME")
	public String getPurchaseEntryName() {
		return this.purchaseEntryName;
	}

	public void setPurchaseEntryName(String purchaseEntryName) {
		this.purchaseEntryName = purchaseEntryName;
	}

	@Column(name = "VENDOR_INVOICE_AMT", nullable = false, precision = 22, scale = 0)
	public double getVendorInvoiceAmt() {
		return this.vendorInvoiceAmt;
	}

	public void setVendorInvoiceAmt(double vendorInvoiceAmt) {
		this.vendorInvoiceAmt = vendorInvoiceAmt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "VENDOR_INVOICE_DATE", length = 19)
	public Date getVendorInvoiceDate() {
		return this.vendorInvoiceDate;
	}

	public void setVendorInvoiceDate(Date vendorInvoiceDate) {
		this.vendorInvoiceDate = vendorInvoiceDate;
	}

	@Column(name = "VENDOR_INVOICE_NO")
	public String getVendorInvoiceNo() {
		return this.vendorInvoiceNo;
	}

	public void setVendorInvoiceNo(String vendorInvoiceNo) {
		this.vendorInvoiceNo = vendorInvoiceNo;
	}

	@Column(name = "CONVERTION_RATE", nullable = false, precision = 22, scale = 0)
	public double getConvertionRate() {
		return this.convertionRate;
	}

	public void setConvertionRate(double convertionRate) {
		this.convertionRate = convertionRate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseEntry")
	public Set<GrnItem> getGrnItems() {
		return this.grnItems;
	}

	public void setGrnItems(Set<GrnItem> grnItems) {
		this.grnItems = grnItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseEntry")
	public Set<GrnItem> getGrnItems_1() {
		return this.grnItems_1;
	}

	public void setGrnItems_1(Set<GrnItem> grnItems_1) {
		this.grnItems_1 = grnItems_1;
	}

}
