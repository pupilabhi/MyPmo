package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InvoiceHistory generated by hbm2java
 */
@Entity
@Table(name = "INVOICE_HISTORY", catalog = "namcrm")
public class InvoiceHistory implements java.io.Serializable {

	private long id;
	private InventoryItem inventoryItem;
	private InvoiceItem invoiceItem;
	private OrderItem orderItem;
	private UserDetails userDetailsByLastModifiedByUserFk;
	private UserDetails userDetailsByCreatedByUserFk;
	private int availableQuantity;
	private Date createdDate;
	private int invoicedQuantity;
	private Date lastModifiedDate;
	private String productDescription;
	private String productName;
	private boolean isRevised;
	private boolean isRejected;

	public InvoiceHistory() {
	}

	public InvoiceHistory(long id, int availableQuantity, int invoicedQuantity, boolean isRevised, boolean isRejected) {
		this.id = id;
		this.availableQuantity = availableQuantity;
		this.invoicedQuantity = invoicedQuantity;
		this.isRevised = isRevised;
		this.isRejected = isRejected;
	}

	public InvoiceHistory(long id, InventoryItem inventoryItem, InvoiceItem invoiceItem, OrderItem orderItem,
			UserDetails userDetailsByLastModifiedByUserFk, UserDetails userDetailsByCreatedByUserFk,
			int availableQuantity, Date createdDate, int invoicedQuantity, Date lastModifiedDate,
			String productDescription, String productName, boolean isRevised, boolean isRejected) {
		this.id = id;
		this.inventoryItem = inventoryItem;
		this.invoiceItem = invoiceItem;
		this.orderItem = orderItem;
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
		this.availableQuantity = availableQuantity;
		this.createdDate = createdDate;
		this.invoicedQuantity = invoicedQuantity;
		this.lastModifiedDate = lastModifiedDate;
		this.productDescription = productDescription;
		this.productName = productName;
		this.isRevised = isRevised;
		this.isRejected = isRejected;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INVENTORY_ITEM_FK")
	public InventoryItem getInventoryItem() {
		return this.inventoryItem;
	}

	public void setInventoryItem(InventoryItem inventoryItem) {
		this.inventoryItem = inventoryItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INVOICE_ITEM_FK")
	public InvoiceItem getInvoiceItem() {
		return this.invoiceItem;
	}

	public void setInvoiceItem(InvoiceItem invoiceItem) {
		this.invoiceItem = invoiceItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDER_ITEM_FK")
	public OrderItem getOrderItem() {
		return this.orderItem;
	}

	public void setOrderItem(OrderItem orderItem) {
		this.orderItem = orderItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY_USER_FK")
	public UserDetails getUserDetailsByLastModifiedByUserFk() {
		return this.userDetailsByLastModifiedByUserFk;
	}

	public void setUserDetailsByLastModifiedByUserFk(UserDetails userDetailsByLastModifiedByUserFk) {
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY_USER_FK")
	public UserDetails getUserDetailsByCreatedByUserFk() {
		return this.userDetailsByCreatedByUserFk;
	}

	public void setUserDetailsByCreatedByUserFk(UserDetails userDetailsByCreatedByUserFk) {
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
	}

	@Column(name = "AVAILABLE_QUANTITY", nullable = false)
	public int getAvailableQuantity() {
		return this.availableQuantity;
	}

	public void setAvailableQuantity(int availableQuantity) {
		this.availableQuantity = availableQuantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "INVOICED_QUANTITY", nullable = false)
	public int getInvoicedQuantity() {
		return this.invoicedQuantity;
	}

	public void setInvoicedQuantity(int invoicedQuantity) {
		this.invoicedQuantity = invoicedQuantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "PRODUCT_DESCRIPTION", length = 16777215)
	public String getProductDescription() {
		return this.productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	@Column(name = "PRODUCT_NAME")
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "IS_REVISED", nullable = false)
	public boolean isIsRevised() {
		return this.isRevised;
	}

	public void setIsRevised(boolean isRevised) {
		this.isRevised = isRevised;
	}

	@Column(name = "IS_REJECTED", nullable = false)
	public boolean isIsRejected() {
		return this.isRejected;
	}

	public void setIsRejected(boolean isRejected) {
		this.isRejected = isRejected;
	}

}
