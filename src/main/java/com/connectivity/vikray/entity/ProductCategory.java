package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ProductCategory generated by hbm2java
 */
@Entity
@Table(name = "PRODUCT_CATEGORY", catalog = "namcrm")
public class ProductCategory implements java.io.Serializable {

	private long id;
	private Domain domain;
	private ProductCategory productCategoryByParentCategoryFk;
	private ProductCategory productCategoryByParentProductFk;
	private String description;
	private String productCategoryType;
	private String type;
	private Set<Product> productsForProductCategoryFk = new HashSet<Product>(0);
	private Set<ProductCategory> productCategoriesForParentCategoryFk = new HashSet<ProductCategory>(0);
	private Set<Product> productsForParentcategoryIdOid = new HashSet<Product>(0);
	private Set<ProductCategory> productCategoriesForParentProductFk = new HashSet<ProductCategory>(0);

	public ProductCategory() {
	}

	public ProductCategory(long id) {
		this.id = id;
	}

	public ProductCategory(long id, Domain domain, ProductCategory productCategoryByParentCategoryFk,
			ProductCategory productCategoryByParentProductFk, String description, String productCategoryType,
			String type, Set<Product> productsForProductCategoryFk,
			Set<ProductCategory> productCategoriesForParentCategoryFk, Set<Product> productsForParentcategoryIdOid,
			Set<ProductCategory> productCategoriesForParentProductFk) {
		this.id = id;
		this.domain = domain;
		this.productCategoryByParentCategoryFk = productCategoryByParentCategoryFk;
		this.productCategoryByParentProductFk = productCategoryByParentProductFk;
		this.description = description;
		this.productCategoryType = productCategoryType;
		this.type = type;
		this.productsForProductCategoryFk = productsForProductCategoryFk;
		this.productCategoriesForParentCategoryFk = productCategoriesForParentCategoryFk;
		this.productsForParentcategoryIdOid = productsForParentcategoryIdOid;
		this.productCategoriesForParentProductFk = productCategoriesForParentProductFk;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_CATEGORY_FK")
	public ProductCategory getProductCategoryByParentCategoryFk() {
		return this.productCategoryByParentCategoryFk;
	}

	public void setProductCategoryByParentCategoryFk(ProductCategory productCategoryByParentCategoryFk) {
		this.productCategoryByParentCategoryFk = productCategoryByParentCategoryFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_PRODUCT_FK")
	public ProductCategory getProductCategoryByParentProductFk() {
		return this.productCategoryByParentProductFk;
	}

	public void setProductCategoryByParentProductFk(ProductCategory productCategoryByParentProductFk) {
		this.productCategoryByParentProductFk = productCategoryByParentProductFk;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "PRODUCT_CATEGORY_TYPE")
	public String getProductCategoryType() {
		return this.productCategoryType;
	}

	public void setProductCategoryType(String productCategoryType) {
		this.productCategoryType = productCategoryType;
	}

	@Column(name = "TYPE")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productCategoryByProductCategoryFk")
	public Set<Product> getProductsForProductCategoryFk() {
		return this.productsForProductCategoryFk;
	}

	public void setProductsForProductCategoryFk(Set<Product> productsForProductCategoryFk) {
		this.productsForProductCategoryFk = productsForProductCategoryFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productCategoryByParentCategoryFk")
	public Set<ProductCategory> getProductCategoriesForParentCategoryFk() {
		return this.productCategoriesForParentCategoryFk;
	}

	public void setProductCategoriesForParentCategoryFk(Set<ProductCategory> productCategoriesForParentCategoryFk) {
		this.productCategoriesForParentCategoryFk = productCategoriesForParentCategoryFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productCategoryByParentcategoryIdOid")
	public Set<Product> getProductsForParentcategoryIdOid() {
		return this.productsForParentcategoryIdOid;
	}

	public void setProductsForParentcategoryIdOid(Set<Product> productsForParentcategoryIdOid) {
		this.productsForParentcategoryIdOid = productsForParentcategoryIdOid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productCategoryByParentProductFk")
	public Set<ProductCategory> getProductCategoriesForParentProductFk() {
		return this.productCategoriesForParentProductFk;
	}

	public void setProductCategoriesForParentProductFk(Set<ProductCategory> productCategoriesForParentProductFk) {
		this.productCategoriesForParentProductFk = productCategoriesForParentProductFk;
	}

}
