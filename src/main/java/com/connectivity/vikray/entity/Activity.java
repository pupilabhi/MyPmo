package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Activity generated by hbm2java
 */
@Entity
@Table(name = "ACTIVITY", catalog = "namcrm")
public class Activity implements java.io.Serializable {

	private long id;
	private DeliveryChallan deliveryChallan;
	private Domain domain;
	private GrnHeader grnHeader;
	private InventoryItem inventoryItem;
	private InvoiceHeader invoiceHeader;
	private OrderItem orderItem;
	private SalesOrderHeader salesOrderHeader;
	private UserDetails userDetailsByLastModifiedByUserFk;
	private UserDetails userDetailsByCreatedByUserFk;
	private String comments;
	private Date createdDate;
	private Date lastModifiedDate;
	private boolean isUpdated;
	private Integer activityIntegerIdx;
	private String vendorName;
	private Date purchaseDate;
	private int quantity;
	private int type;
	private String sosName;

	public Activity() {
	}

	public Activity(long id, boolean isUpdated, int quantity, int type) {
		this.id = id;
		this.isUpdated = isUpdated;
		this.quantity = quantity;
		this.type = type;
	}

	public Activity(long id, DeliveryChallan deliveryChallan, Domain domain, GrnHeader grnHeader,
			InventoryItem inventoryItem, InvoiceHeader invoiceHeader, OrderItem orderItem,
			SalesOrderHeader salesOrderHeader, UserDetails userDetailsByLastModifiedByUserFk,
			UserDetails userDetailsByCreatedByUserFk, String comments, Date createdDate, Date lastModifiedDate,
			boolean isUpdated, Integer activityIntegerIdx, String vendorName, Date purchaseDate, int quantity, int type,
			String sosName) {
		this.id = id;
		this.deliveryChallan = deliveryChallan;
		this.domain = domain;
		this.grnHeader = grnHeader;
		this.inventoryItem = inventoryItem;
		this.invoiceHeader = invoiceHeader;
		this.orderItem = orderItem;
		this.salesOrderHeader = salesOrderHeader;
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
		this.comments = comments;
		this.createdDate = createdDate;
		this.lastModifiedDate = lastModifiedDate;
		this.isUpdated = isUpdated;
		this.activityIntegerIdx = activityIntegerIdx;
		this.vendorName = vendorName;
		this.purchaseDate = purchaseDate;
		this.quantity = quantity;
		this.type = type;
		this.sosName = sosName;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DELIVER_CHALLAN_FK")
	public DeliveryChallan getDeliveryChallan() {
		return this.deliveryChallan;
	}

	public void setDeliveryChallan(DeliveryChallan deliveryChallan) {
		this.deliveryChallan = deliveryChallan;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GOODS_RECEIPT_FK")
	public GrnHeader getGrnHeader() {
		return this.grnHeader;
	}

	public void setGrnHeader(GrnHeader grnHeader) {
		this.grnHeader = grnHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INVENTORY_ITEM_FK")
	public InventoryItem getInventoryItem() {
		return this.inventoryItem;
	}

	public void setInventoryItem(InventoryItem inventoryItem) {
		this.inventoryItem = inventoryItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INVOICE_FK")
	public InvoiceHeader getInvoiceHeader() {
		return this.invoiceHeader;
	}

	public void setInvoiceHeader(InvoiceHeader invoiceHeader) {
		this.invoiceHeader = invoiceHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDER_ITEM_FK")
	public OrderItem getOrderItem() {
		return this.orderItem;
	}

	public void setOrderItem(OrderItem orderItem) {
		this.orderItem = orderItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SALES_ORDER_FK")
	public SalesOrderHeader getSalesOrderHeader() {
		return this.salesOrderHeader;
	}

	public void setSalesOrderHeader(SalesOrderHeader salesOrderHeader) {
		this.salesOrderHeader = salesOrderHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY_USER_FK")
	public UserDetails getUserDetailsByLastModifiedByUserFk() {
		return this.userDetailsByLastModifiedByUserFk;
	}

	public void setUserDetailsByLastModifiedByUserFk(UserDetails userDetailsByLastModifiedByUserFk) {
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY_USER_FK")
	public UserDetails getUserDetailsByCreatedByUserFk() {
		return this.userDetailsByCreatedByUserFk;
	}

	public void setUserDetailsByCreatedByUserFk(UserDetails userDetailsByCreatedByUserFk) {
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
	}

	@Column(name = "COMMENTS", length = 16777215)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "IS_UPDATED", nullable = false)
	public boolean isIsUpdated() {
		return this.isUpdated;
	}

	public void setIsUpdated(boolean isUpdated) {
		this.isUpdated = isUpdated;
	}

	@Column(name = "ACTIVITY_INTEGER_IDX")
	public Integer getActivityIntegerIdx() {
		return this.activityIntegerIdx;
	}

	public void setActivityIntegerIdx(Integer activityIntegerIdx) {
		this.activityIntegerIdx = activityIntegerIdx;
	}

	@Column(name = "VENDOR_NAME")
	public String getVendorName() {
		return this.vendorName;
	}

	public void setVendorName(String vendorName) {
		this.vendorName = vendorName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PURCHASE_DATE", length = 19)
	public Date getPurchaseDate() {
		return this.purchaseDate;
	}

	public void setPurchaseDate(Date purchaseDate) {
		this.purchaseDate = purchaseDate;
	}

	@Column(name = "QUANTITY", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "TYPE", nullable = false)
	public int getType() {
		return this.type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Column(name = "SOS_NAME")
	public String getSosName() {
		return this.sosName;
	}

	public void setSosName(String sosName) {
		this.sosName = sosName;
	}

}
