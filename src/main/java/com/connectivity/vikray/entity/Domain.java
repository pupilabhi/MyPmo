package com.connectivity.vikray.entity;
// Generated 6 Dec, 2018 11:37:25 AM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Domain generated by hbm2java
 */
@Entity
@Table(name = "DOMAIN", catalog = "namcrm")
public class Domain implements java.io.Serializable {

	private long id;
	private String domainName;
	private String sparkTeamId;
	private Set<UserDetails> userDetailses = new HashSet<UserDetails>(0);
	private Set<AccountDetail> accountDetails = new HashSet<AccountDetail>(0);
	private Set<GrnHeader> grnHeaders = new HashSet<GrnHeader>(0);
	private Set<PurchaseEntry> purchaseEntries = new HashSet<PurchaseEntry>(0);
	private Set<Warehouse> warehouses = new HashSet<Warehouse>(0);
	private Set<DeliveryChallan> deliveryChallans = new HashSet<DeliveryChallan>(0);
	private Set<InventoryType> inventoryTypes = new HashSet<InventoryType>(0);
	private Set<Product> products = new HashSet<Product>(0);
	private Set<Organisation> organisations = new HashSet<Organisation>(0);
	private Set<PurchaseOrderHeader> purchaseOrderHeaders = new HashSet<PurchaseOrderHeader>(0);
	private Set<Task> tasks = new HashSet<Task>(0);
	private Set<InventoryType> inventoryTypes_1 = new HashSet<InventoryType>(0);
	private Set<FinancialReport> financialReports = new HashSet<FinancialReport>(0);
	private Set<Task> tasks_1 = new HashSet<Task>(0);
	private Set<ProductCategory> productCategories = new HashSet<ProductCategory>(0);
	private Set<PurchaseOrderHeader> purchaseOrderHeaders_1 = new HashSet<PurchaseOrderHeader>(0);
	private Set<UserDetails> userDetailses_1 = new HashSet<UserDetails>(0);
	private Set<AccountDetail> accountDetails_1 = new HashSet<AccountDetail>(0);
	private Set<Product> products_1 = new HashSet<Product>(0);
	private Set<ProductCategory> productCategories_1 = new HashSet<ProductCategory>(0);
	private Set<SalesOrderHeader> salesOrderHeaders = new HashSet<SalesOrderHeader>(0);
	private Set<InventoryItem> inventoryItems = new HashSet<InventoryItem>(0);
	private Set<BusinessDeal> businessDeals = new HashSet<BusinessDeal>(0);
	private Set<DeliveryChallan> deliveryChallans_1 = new HashSet<DeliveryChallan>(0);
	private Set<BusinessDeal> businessDeals_1 = new HashSet<BusinessDeal>(0);
	private Set<QuoteHeader> quoteHeaders = new HashSet<QuoteHeader>(0);
	private Set<FinancialReport> financialReports_1 = new HashSet<FinancialReport>(0);
	private Set<Warehouse> warehouses_1 = new HashSet<Warehouse>(0);
	private Set<GrnHeader> grnHeaders_1 = new HashSet<GrnHeader>(0);
	private Set<PersonDetail> personDetails = new HashSet<PersonDetail>(0);
	private Set<PersonDetail> personDetails_1 = new HashSet<PersonDetail>(0);
	private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);
	private Set<QuoteHeader> quoteHeaders_1 = new HashSet<QuoteHeader>(0);
	private Set<SalesOrderHeader> salesOrderHeaders_1 = new HashSet<SalesOrderHeader>(0);
	private Set<InventoryItem> inventoryItems_1 = new HashSet<InventoryItem>(0);
	private Set<InvoiceHeader> invoiceHeaders_1 = new HashSet<InvoiceHeader>(0);
	private Set<PurchaseEntry> purchaseEntries_1 = new HashSet<PurchaseEntry>(0);
	private Set<Organisation> organisations_1 = new HashSet<Organisation>(0);

	public Domain() {
	}

	public Domain(long id) {
		this.id = id;
	}

	public Domain(long id, String domainName, String sparkTeamId, Set<UserDetails> userDetailses,
			Set<AccountDetail> accountDetails, Set<GrnHeader> grnHeaders, Set<PurchaseEntry> purchaseEntries,
			Set<Warehouse> warehouses, Set<DeliveryChallan> deliveryChallans, Set<InventoryType> inventoryTypes,
			Set<Product> products, Set<Organisation> organisations, Set<PurchaseOrderHeader> purchaseOrderHeaders,
			Set<Task> tasks, Set<InventoryType> inventoryTypes_1, Set<FinancialReport> financialReports,
			Set<Task> tasks_1, Set<ProductCategory> productCategories, Set<PurchaseOrderHeader> purchaseOrderHeaders_1,
			Set<UserDetails> userDetailses_1, Set<AccountDetail> accountDetails_1, Set<Product> products_1,
			Set<ProductCategory> productCategories_1, Set<SalesOrderHeader> salesOrderHeaders,
			Set<InventoryItem> inventoryItems, Set<BusinessDeal> businessDeals, Set<DeliveryChallan> deliveryChallans_1,
			Set<BusinessDeal> businessDeals_1, Set<QuoteHeader> quoteHeaders, Set<FinancialReport> financialReports_1,
			Set<Warehouse> warehouses_1, Set<GrnHeader> grnHeaders_1, Set<PersonDetail> personDetails,
			Set<PersonDetail> personDetails_1, Set<InvoiceHeader> invoiceHeaders, Set<QuoteHeader> quoteHeaders_1,
			Set<SalesOrderHeader> salesOrderHeaders_1, Set<InventoryItem> inventoryItems_1,
			Set<InvoiceHeader> invoiceHeaders_1, Set<PurchaseEntry> purchaseEntries_1,
			Set<Organisation> organisations_1) {
		this.id = id;
		this.domainName = domainName;
		this.sparkTeamId = sparkTeamId;
		this.userDetailses = userDetailses;
		this.accountDetails = accountDetails;
		this.grnHeaders = grnHeaders;
		this.purchaseEntries = purchaseEntries;
		this.warehouses = warehouses;
		this.deliveryChallans = deliveryChallans;
		this.inventoryTypes = inventoryTypes;
		this.products = products;
		this.organisations = organisations;
		this.purchaseOrderHeaders = purchaseOrderHeaders;
		this.tasks = tasks;
		this.inventoryTypes_1 = inventoryTypes_1;
		this.financialReports = financialReports;
		this.tasks_1 = tasks_1;
		this.productCategories = productCategories;
		this.purchaseOrderHeaders_1 = purchaseOrderHeaders_1;
		this.userDetailses_1 = userDetailses_1;
		this.accountDetails_1 = accountDetails_1;
		this.products_1 = products_1;
		this.productCategories_1 = productCategories_1;
		this.salesOrderHeaders = salesOrderHeaders;
		this.inventoryItems = inventoryItems;
		this.businessDeals = businessDeals;
		this.deliveryChallans_1 = deliveryChallans_1;
		this.businessDeals_1 = businessDeals_1;
		this.quoteHeaders = quoteHeaders;
		this.financialReports_1 = financialReports_1;
		this.warehouses_1 = warehouses_1;
		this.grnHeaders_1 = grnHeaders_1;
		this.personDetails = personDetails;
		this.personDetails_1 = personDetails_1;
		this.invoiceHeaders = invoiceHeaders;
		this.quoteHeaders_1 = quoteHeaders_1;
		this.salesOrderHeaders_1 = salesOrderHeaders_1;
		this.inventoryItems_1 = inventoryItems_1;
		this.invoiceHeaders_1 = invoiceHeaders_1;
		this.purchaseEntries_1 = purchaseEntries_1;
		this.organisations_1 = organisations_1;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "DOMAIN_NAME")
	public String getDomainName() {
		return this.domainName;
	}

	public void setDomainName(String domainName) {
		this.domainName = domainName;
	}

	@Column(name = "SPARK_TEAM_ID")
	public String getSparkTeamId() {
		return this.sparkTeamId;
	}

	public void setSparkTeamId(String sparkTeamId) {
		this.sparkTeamId = sparkTeamId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<UserDetails> getUserDetailses() {
		return this.userDetailses;
	}

	public void setUserDetailses(Set<UserDetails> userDetailses) {
		this.userDetailses = userDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<AccountDetail> getAccountDetails() {
		return this.accountDetails;
	}

	public void setAccountDetails(Set<AccountDetail> accountDetails) {
		this.accountDetails = accountDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<GrnHeader> getGrnHeaders() {
		return this.grnHeaders;
	}

	public void setGrnHeaders(Set<GrnHeader> grnHeaders) {
		this.grnHeaders = grnHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PurchaseEntry> getPurchaseEntries() {
		return this.purchaseEntries;
	}

	public void setPurchaseEntries(Set<PurchaseEntry> purchaseEntries) {
		this.purchaseEntries = purchaseEntries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Warehouse> getWarehouses() {
		return this.warehouses;
	}

	public void setWarehouses(Set<Warehouse> warehouses) {
		this.warehouses = warehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<DeliveryChallan> getDeliveryChallans() {
		return this.deliveryChallans;
	}

	public void setDeliveryChallans(Set<DeliveryChallan> deliveryChallans) {
		this.deliveryChallans = deliveryChallans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryType> getInventoryTypes() {
		return this.inventoryTypes;
	}

	public void setInventoryTypes(Set<InventoryType> inventoryTypes) {
		this.inventoryTypes = inventoryTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Organisation> getOrganisations() {
		return this.organisations;
	}

	public void setOrganisations(Set<Organisation> organisations) {
		this.organisations = organisations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PurchaseOrderHeader> getPurchaseOrderHeaders() {
		return this.purchaseOrderHeaders;
	}

	public void setPurchaseOrderHeaders(Set<PurchaseOrderHeader> purchaseOrderHeaders) {
		this.purchaseOrderHeaders = purchaseOrderHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryType> getInventoryTypes_1() {
		return this.inventoryTypes_1;
	}

	public void setInventoryTypes_1(Set<InventoryType> inventoryTypes_1) {
		this.inventoryTypes_1 = inventoryTypes_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<FinancialReport> getFinancialReports() {
		return this.financialReports;
	}

	public void setFinancialReports(Set<FinancialReport> financialReports) {
		this.financialReports = financialReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Task> getTasks_1() {
		return this.tasks_1;
	}

	public void setTasks_1(Set<Task> tasks_1) {
		this.tasks_1 = tasks_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<ProductCategory> getProductCategories() {
		return this.productCategories;
	}

	public void setProductCategories(Set<ProductCategory> productCategories) {
		this.productCategories = productCategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PurchaseOrderHeader> getPurchaseOrderHeaders_1() {
		return this.purchaseOrderHeaders_1;
	}

	public void setPurchaseOrderHeaders_1(Set<PurchaseOrderHeader> purchaseOrderHeaders_1) {
		this.purchaseOrderHeaders_1 = purchaseOrderHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<UserDetails> getUserDetailses_1() {
		return this.userDetailses_1;
	}

	public void setUserDetailses_1(Set<UserDetails> userDetailses_1) {
		this.userDetailses_1 = userDetailses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<AccountDetail> getAccountDetails_1() {
		return this.accountDetails_1;
	}

	public void setAccountDetails_1(Set<AccountDetail> accountDetails_1) {
		this.accountDetails_1 = accountDetails_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Product> getProducts_1() {
		return this.products_1;
	}

	public void setProducts_1(Set<Product> products_1) {
		this.products_1 = products_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<ProductCategory> getProductCategories_1() {
		return this.productCategories_1;
	}

	public void setProductCategories_1(Set<ProductCategory> productCategories_1) {
		this.productCategories_1 = productCategories_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<SalesOrderHeader> getSalesOrderHeaders() {
		return this.salesOrderHeaders;
	}

	public void setSalesOrderHeaders(Set<SalesOrderHeader> salesOrderHeaders) {
		this.salesOrderHeaders = salesOrderHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryItem> getInventoryItems() {
		return this.inventoryItems;
	}

	public void setInventoryItems(Set<InventoryItem> inventoryItems) {
		this.inventoryItems = inventoryItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<BusinessDeal> getBusinessDeals() {
		return this.businessDeals;
	}

	public void setBusinessDeals(Set<BusinessDeal> businessDeals) {
		this.businessDeals = businessDeals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<DeliveryChallan> getDeliveryChallans_1() {
		return this.deliveryChallans_1;
	}

	public void setDeliveryChallans_1(Set<DeliveryChallan> deliveryChallans_1) {
		this.deliveryChallans_1 = deliveryChallans_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<BusinessDeal> getBusinessDeals_1() {
		return this.businessDeals_1;
	}

	public void setBusinessDeals_1(Set<BusinessDeal> businessDeals_1) {
		this.businessDeals_1 = businessDeals_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<QuoteHeader> getQuoteHeaders() {
		return this.quoteHeaders;
	}

	public void setQuoteHeaders(Set<QuoteHeader> quoteHeaders) {
		this.quoteHeaders = quoteHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<FinancialReport> getFinancialReports_1() {
		return this.financialReports_1;
	}

	public void setFinancialReports_1(Set<FinancialReport> financialReports_1) {
		this.financialReports_1 = financialReports_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Warehouse> getWarehouses_1() {
		return this.warehouses_1;
	}

	public void setWarehouses_1(Set<Warehouse> warehouses_1) {
		this.warehouses_1 = warehouses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<GrnHeader> getGrnHeaders_1() {
		return this.grnHeaders_1;
	}

	public void setGrnHeaders_1(Set<GrnHeader> grnHeaders_1) {
		this.grnHeaders_1 = grnHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PersonDetail> getPersonDetails() {
		return this.personDetails;
	}

	public void setPersonDetails(Set<PersonDetail> personDetails) {
		this.personDetails = personDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PersonDetail> getPersonDetails_1() {
		return this.personDetails_1;
	}

	public void setPersonDetails_1(Set<PersonDetail> personDetails_1) {
		this.personDetails_1 = personDetails_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InvoiceHeader> getInvoiceHeaders() {
		return this.invoiceHeaders;
	}

	public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
		this.invoiceHeaders = invoiceHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<QuoteHeader> getQuoteHeaders_1() {
		return this.quoteHeaders_1;
	}

	public void setQuoteHeaders_1(Set<QuoteHeader> quoteHeaders_1) {
		this.quoteHeaders_1 = quoteHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<SalesOrderHeader> getSalesOrderHeaders_1() {
		return this.salesOrderHeaders_1;
	}

	public void setSalesOrderHeaders_1(Set<SalesOrderHeader> salesOrderHeaders_1) {
		this.salesOrderHeaders_1 = salesOrderHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryItem> getInventoryItems_1() {
		return this.inventoryItems_1;
	}

	public void setInventoryItems_1(Set<InventoryItem> inventoryItems_1) {
		this.inventoryItems_1 = inventoryItems_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InvoiceHeader> getInvoiceHeaders_1() {
		return this.invoiceHeaders_1;
	}

	public void setInvoiceHeaders_1(Set<InvoiceHeader> invoiceHeaders_1) {
		this.invoiceHeaders_1 = invoiceHeaders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PurchaseEntry> getPurchaseEntries_1() {
		return this.purchaseEntries_1;
	}

	public void setPurchaseEntries_1(Set<PurchaseEntry> purchaseEntries_1) {
		this.purchaseEntries_1 = purchaseEntries_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Organisation> getOrganisations_1() {
		return this.organisations_1;
	}

	public void setOrganisations_1(Set<Organisation> organisations_1) {
		this.organisations_1 = organisations_1;
	}

}
