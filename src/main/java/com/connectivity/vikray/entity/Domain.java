package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Domain generated by hbm2java
 */
@Entity
@Table(name = "DOMAIN", catalog = "namcrm")
public class Domain implements java.io.Serializable {

	private long id;
	private String domainName;
	private String sparkTeamId;
	private Set<UserDetails> userDetailses = new HashSet<UserDetails>(0);
	private Set<AccountDetail> accountDetails = new HashSet<AccountDetail>(0);
	private Set<GrnHeader> grnHeaders = new HashSet<GrnHeader>(0);
	private Set<Warehouse> warehouses = new HashSet<Warehouse>(0);
	private Set<DeliveryChallan> deliveryChallans = new HashSet<DeliveryChallan>(0);
	private Set<Organisation> organisations = new HashSet<Organisation>(0);
	private Set<PurchaseOrderHeader> purchaseOrderHeaders = new HashSet<PurchaseOrderHeader>(0);
	private Set<InventoryType> inventoryTypes = new HashSet<InventoryType>(0);
	private Set<WeeklySalesCommits> weeklySalesCommitses = new HashSet<WeeklySalesCommits>(0);
	private Set<FinancialReport> financialReports = new HashSet<FinancialReport>(0);
	private Set<Task> tasks = new HashSet<Task>(0);
	private Set<Activity> activities = new HashSet<Activity>(0);
	private Set<ProductCategory> productCategories = new HashSet<ProductCategory>(0);
	private Set<Product> products = new HashSet<Product>(0);
	private Set<DocSequence> docSequences = new HashSet<DocSequence>(0);
	private Set<SalesOrderHeader> salesOrderHeaders = new HashSet<SalesOrderHeader>(0);
	private Set<BusinessDeal> businessDeals = new HashSet<BusinessDeal>(0);
	private Set<ReserveActivity> reserveActivities = new HashSet<ReserveActivity>(0);
	private Set<QuoteHeader> quoteHeaders = new HashSet<QuoteHeader>(0);
	private Set<SalesPerformance> salesPerformances = new HashSet<SalesPerformance>(0);
	private Set<PersonDetail> personDetails = new HashSet<PersonDetail>(0);
	private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);
	private Set<InventoryItem> inventoryItems = new HashSet<InventoryItem>(0);
	private Set<InventoryUniqueItem> inventoryUniqueItems = new HashSet<InventoryUniqueItem>(0);
	private Set<PurchaseEntry> purchaseEntries = new HashSet<PurchaseEntry>(0);

	public Domain() {
	}

	public Domain(long id) {
		this.id = id;
	}

	public Domain(long id, String domainName, String sparkTeamId, Set<UserDetails> userDetailses,
			Set<AccountDetail> accountDetails, Set<GrnHeader> grnHeaders, Set<Warehouse> warehouses,
			Set<DeliveryChallan> deliveryChallans, Set<Organisation> organisations,
			Set<PurchaseOrderHeader> purchaseOrderHeaders, Set<InventoryType> inventoryTypes,
			Set<WeeklySalesCommits> weeklySalesCommitses, Set<FinancialReport> financialReports, Set<Task> tasks,
			Set<Activity> activities, Set<ProductCategory> productCategories, Set<Product> products,
			Set<DocSequence> docSequences, Set<SalesOrderHeader> salesOrderHeaders, Set<BusinessDeal> businessDeals,
			Set<ReserveActivity> reserveActivities, Set<QuoteHeader> quoteHeaders,
			Set<SalesPerformance> salesPerformances, Set<PersonDetail> personDetails, Set<InvoiceHeader> invoiceHeaders,
			Set<InventoryItem> inventoryItems, Set<InventoryUniqueItem> inventoryUniqueItems,
			Set<PurchaseEntry> purchaseEntries) {
		this.id = id;
		this.domainName = domainName;
		this.sparkTeamId = sparkTeamId;
		this.userDetailses = userDetailses;
		this.accountDetails = accountDetails;
		this.grnHeaders = grnHeaders;
		this.warehouses = warehouses;
		this.deliveryChallans = deliveryChallans;
		this.organisations = organisations;
		this.purchaseOrderHeaders = purchaseOrderHeaders;
		this.inventoryTypes = inventoryTypes;
		this.weeklySalesCommitses = weeklySalesCommitses;
		this.financialReports = financialReports;
		this.tasks = tasks;
		this.activities = activities;
		this.productCategories = productCategories;
		this.products = products;
		this.docSequences = docSequences;
		this.salesOrderHeaders = salesOrderHeaders;
		this.businessDeals = businessDeals;
		this.reserveActivities = reserveActivities;
		this.quoteHeaders = quoteHeaders;
		this.salesPerformances = salesPerformances;
		this.personDetails = personDetails;
		this.invoiceHeaders = invoiceHeaders;
		this.inventoryItems = inventoryItems;
		this.inventoryUniqueItems = inventoryUniqueItems;
		this.purchaseEntries = purchaseEntries;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "DOMAIN_NAME")
	public String getDomainName() {
		return this.domainName;
	}

	public void setDomainName(String domainName) {
		this.domainName = domainName;
	}

	@Column(name = "SPARK_TEAM_ID")
	public String getSparkTeamId() {
		return this.sparkTeamId;
	}

	public void setSparkTeamId(String sparkTeamId) {
		this.sparkTeamId = sparkTeamId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<UserDetails> getUserDetailses() {
		return this.userDetailses;
	}

	public void setUserDetailses(Set<UserDetails> userDetailses) {
		this.userDetailses = userDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<AccountDetail> getAccountDetails() {
		return this.accountDetails;
	}

	public void setAccountDetails(Set<AccountDetail> accountDetails) {
		this.accountDetails = accountDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<GrnHeader> getGrnHeaders() {
		return this.grnHeaders;
	}

	public void setGrnHeaders(Set<GrnHeader> grnHeaders) {
		this.grnHeaders = grnHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Warehouse> getWarehouses() {
		return this.warehouses;
	}

	public void setWarehouses(Set<Warehouse> warehouses) {
		this.warehouses = warehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<DeliveryChallan> getDeliveryChallans() {
		return this.deliveryChallans;
	}

	public void setDeliveryChallans(Set<DeliveryChallan> deliveryChallans) {
		this.deliveryChallans = deliveryChallans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Organisation> getOrganisations() {
		return this.organisations;
	}

	public void setOrganisations(Set<Organisation> organisations) {
		this.organisations = organisations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PurchaseOrderHeader> getPurchaseOrderHeaders() {
		return this.purchaseOrderHeaders;
	}

	public void setPurchaseOrderHeaders(Set<PurchaseOrderHeader> purchaseOrderHeaders) {
		this.purchaseOrderHeaders = purchaseOrderHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryType> getInventoryTypes() {
		return this.inventoryTypes;
	}

	public void setInventoryTypes(Set<InventoryType> inventoryTypes) {
		this.inventoryTypes = inventoryTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<WeeklySalesCommits> getWeeklySalesCommitses() {
		return this.weeklySalesCommitses;
	}

	public void setWeeklySalesCommitses(Set<WeeklySalesCommits> weeklySalesCommitses) {
		this.weeklySalesCommitses = weeklySalesCommitses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<FinancialReport> getFinancialReports() {
		return this.financialReports;
	}

	public void setFinancialReports(Set<FinancialReport> financialReports) {
		this.financialReports = financialReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Activity> getActivities() {
		return this.activities;
	}

	public void setActivities(Set<Activity> activities) {
		this.activities = activities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<ProductCategory> getProductCategories() {
		return this.productCategories;
	}

	public void setProductCategories(Set<ProductCategory> productCategories) {
		this.productCategories = productCategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<DocSequence> getDocSequences() {
		return this.docSequences;
	}

	public void setDocSequences(Set<DocSequence> docSequences) {
		this.docSequences = docSequences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<SalesOrderHeader> getSalesOrderHeaders() {
		return this.salesOrderHeaders;
	}

	public void setSalesOrderHeaders(Set<SalesOrderHeader> salesOrderHeaders) {
		this.salesOrderHeaders = salesOrderHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<BusinessDeal> getBusinessDeals() {
		return this.businessDeals;
	}

	public void setBusinessDeals(Set<BusinessDeal> businessDeals) {
		this.businessDeals = businessDeals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<ReserveActivity> getReserveActivities() {
		return this.reserveActivities;
	}

	public void setReserveActivities(Set<ReserveActivity> reserveActivities) {
		this.reserveActivities = reserveActivities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<QuoteHeader> getQuoteHeaders() {
		return this.quoteHeaders;
	}

	public void setQuoteHeaders(Set<QuoteHeader> quoteHeaders) {
		this.quoteHeaders = quoteHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<SalesPerformance> getSalesPerformances() {
		return this.salesPerformances;
	}

	public void setSalesPerformances(Set<SalesPerformance> salesPerformances) {
		this.salesPerformances = salesPerformances;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PersonDetail> getPersonDetails() {
		return this.personDetails;
	}

	public void setPersonDetails(Set<PersonDetail> personDetails) {
		this.personDetails = personDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InvoiceHeader> getInvoiceHeaders() {
		return this.invoiceHeaders;
	}

	public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
		this.invoiceHeaders = invoiceHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryItem> getInventoryItems() {
		return this.inventoryItems;
	}

	public void setInventoryItems(Set<InventoryItem> inventoryItems) {
		this.inventoryItems = inventoryItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<InventoryUniqueItem> getInventoryUniqueItems() {
		return this.inventoryUniqueItems;
	}

	public void setInventoryUniqueItems(Set<InventoryUniqueItem> inventoryUniqueItems) {
		this.inventoryUniqueItems = inventoryUniqueItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "domain")
	public Set<PurchaseEntry> getPurchaseEntries() {
		return this.purchaseEntries;
	}

	public void setPurchaseEntries(Set<PurchaseEntry> purchaseEntries) {
		this.purchaseEntries = purchaseEntries;
	}

}
