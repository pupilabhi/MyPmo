package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SalesOrderHeader generated by hbm2java
 */
@Entity
@Table(name = "SALES_ORDER_HEADER", catalog = "namcrm")
public class SalesOrderHeader implements java.io.Serializable {

	private long id;
	private AccountAddress accountAddressByShippingFk;
	private AccountAddress accountAddressByBillingFk;
	private AccountDetail accountDetailByToShipAccountFk;
	private AccountDetail accountDetailByAccountFk;
	private CrmType crmType;
	private Currency currency;
	private Domain domain;
	private Organisation organisation;
	private PersonDetail personDetailByFinanceContactFk;
	private PersonDetail personDetailByPersonFk;
	private PersonDetail personDetailByShippingContactFk;
	private QuoteHeader quoteHeader;
	private StatusItem statusItem;
	private UserDetails userDetailsByOwnerFk;
	private UserDetails userDetailsByLastModifiedByUserFk;
	private UserDetails userDetailsByCreatedByUserFk;
	private String accountPhone;
	private Date createdDate;
	private String custPoNumber;
	private String custPoWarrantyTerm;
	private Date customerPoDate;
	private String dealId;
	private int deliveryTermsDays;
	private double discount;
	private double factor;
	private String financeEmail;
	private String financePhnNo;
	private String guid;
	private Date lastModifiedDate;
	private String location;
	private double octroiTax;
	private String orderName;
	private double otherExpense;
	private boolean partialDelivery;
	private Date paymentDate;
	private int paymentTermsDays;
	private String personEmail;
	private String personPhone;
	private String poDocPath;
	private double projectExpence;
	private String remarks;
	private String salesOrderMainHeadDetails;
	private Date shipmentDate;
	private double shippingCost;
	private String shippingEmail;
	private String shippingPhnNo;
	private int rentalDuration;
	private boolean customerAcceptance;
	private String customerRejectReason;
	private Date acceptRejectDate;
	private Date firstCommitDate;
	private int rentalUot;
	private String paymentTermPeriod;
	private String paymentType;
	private double advanceAmount;
	private boolean checkProduct;
	private Date serviceStartDate;
	private Date serviceEndDate;
	private double taxAmount;
	private double oneTimeCost;
	private double costOfFinance;
	private double penalty;
	private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);
	private Set<BusinessDeal> businessDeals = new HashSet<BusinessDeal>(0);
	private Set<DeliveryChallan> deliveryChallans = new HashSet<DeliveryChallan>(0);
	private Set<PurchaseEntry> purchaseEntries = new HashSet<PurchaseEntry>(0);
	private Set<Activity> activities = new HashSet<Activity>(0);
	private Set<FinancialReport> financialReports = new HashSet<FinancialReport>(0);
	private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);
	private Set<PurchaseOrderHeader> purchaseOrderHeaders = new HashSet<PurchaseOrderHeader>(0);

	public SalesOrderHeader() {
	}

	public SalesOrderHeader(long id, int deliveryTermsDays, double discount, double factor, double octroiTax,
			double otherExpense, boolean partialDelivery, int paymentTermsDays, double projectExpence,
			double shippingCost, int rentalDuration, boolean customerAcceptance, int rentalUot, double advanceAmount,
			boolean checkProduct, double taxAmount, double oneTimeCost, double costOfFinance, double penalty) {
		this.id = id;
		this.deliveryTermsDays = deliveryTermsDays;
		this.discount = discount;
		this.factor = factor;
		this.octroiTax = octroiTax;
		this.otherExpense = otherExpense;
		this.partialDelivery = partialDelivery;
		this.paymentTermsDays = paymentTermsDays;
		this.projectExpence = projectExpence;
		this.shippingCost = shippingCost;
		this.rentalDuration = rentalDuration;
		this.customerAcceptance = customerAcceptance;
		this.rentalUot = rentalUot;
		this.advanceAmount = advanceAmount;
		this.checkProduct = checkProduct;
		this.taxAmount = taxAmount;
		this.oneTimeCost = oneTimeCost;
		this.costOfFinance = costOfFinance;
		this.penalty = penalty;
	}

	public SalesOrderHeader(long id, AccountAddress accountAddressByShippingFk,
			AccountAddress accountAddressByBillingFk, AccountDetail accountDetailByToShipAccountFk,
			AccountDetail accountDetailByAccountFk, CrmType crmType, Currency currency, Domain domain,
			Organisation organisation, PersonDetail personDetailByFinanceContactFk, PersonDetail personDetailByPersonFk,
			PersonDetail personDetailByShippingContactFk, QuoteHeader quoteHeader, StatusItem statusItem,
			UserDetails userDetailsByOwnerFk, UserDetails userDetailsByLastModifiedByUserFk,
			UserDetails userDetailsByCreatedByUserFk, String accountPhone, Date createdDate, String custPoNumber,
			String custPoWarrantyTerm, Date customerPoDate, String dealId, int deliveryTermsDays, double discount,
			double factor, String financeEmail, String financePhnNo, String guid, Date lastModifiedDate,
			String location, double octroiTax, String orderName, double otherExpense, boolean partialDelivery,
			Date paymentDate, int paymentTermsDays, String personEmail, String personPhone, String poDocPath,
			double projectExpence, String remarks, String salesOrderMainHeadDetails, Date shipmentDate,
			double shippingCost, String shippingEmail, String shippingPhnNo, int rentalDuration,
			boolean customerAcceptance, String customerRejectReason, Date acceptRejectDate, Date firstCommitDate,
			int rentalUot, String paymentTermPeriod, String paymentType, double advanceAmount, boolean checkProduct,
			Date serviceStartDate, Date serviceEndDate, double taxAmount, double oneTimeCost, double costOfFinance,
			double penalty, Set<OrderItem> orderItems, Set<BusinessDeal> businessDeals,
			Set<DeliveryChallan> deliveryChallans, Set<PurchaseEntry> purchaseEntries, Set<Activity> activities,
			Set<FinancialReport> financialReports, Set<InvoiceHeader> invoiceHeaders,
			Set<PurchaseOrderHeader> purchaseOrderHeaders) {
		this.id = id;
		this.accountAddressByShippingFk = accountAddressByShippingFk;
		this.accountAddressByBillingFk = accountAddressByBillingFk;
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
		this.accountDetailByAccountFk = accountDetailByAccountFk;
		this.crmType = crmType;
		this.currency = currency;
		this.domain = domain;
		this.organisation = organisation;
		this.personDetailByFinanceContactFk = personDetailByFinanceContactFk;
		this.personDetailByPersonFk = personDetailByPersonFk;
		this.personDetailByShippingContactFk = personDetailByShippingContactFk;
		this.quoteHeader = quoteHeader;
		this.statusItem = statusItem;
		this.userDetailsByOwnerFk = userDetailsByOwnerFk;
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
		this.accountPhone = accountPhone;
		this.createdDate = createdDate;
		this.custPoNumber = custPoNumber;
		this.custPoWarrantyTerm = custPoWarrantyTerm;
		this.customerPoDate = customerPoDate;
		this.dealId = dealId;
		this.deliveryTermsDays = deliveryTermsDays;
		this.discount = discount;
		this.factor = factor;
		this.financeEmail = financeEmail;
		this.financePhnNo = financePhnNo;
		this.guid = guid;
		this.lastModifiedDate = lastModifiedDate;
		this.location = location;
		this.octroiTax = octroiTax;
		this.orderName = orderName;
		this.otherExpense = otherExpense;
		this.partialDelivery = partialDelivery;
		this.paymentDate = paymentDate;
		this.paymentTermsDays = paymentTermsDays;
		this.personEmail = personEmail;
		this.personPhone = personPhone;
		this.poDocPath = poDocPath;
		this.projectExpence = projectExpence;
		this.remarks = remarks;
		this.salesOrderMainHeadDetails = salesOrderMainHeadDetails;
		this.shipmentDate = shipmentDate;
		this.shippingCost = shippingCost;
		this.shippingEmail = shippingEmail;
		this.shippingPhnNo = shippingPhnNo;
		this.rentalDuration = rentalDuration;
		this.customerAcceptance = customerAcceptance;
		this.customerRejectReason = customerRejectReason;
		this.acceptRejectDate = acceptRejectDate;
		this.firstCommitDate = firstCommitDate;
		this.rentalUot = rentalUot;
		this.paymentTermPeriod = paymentTermPeriod;
		this.paymentType = paymentType;
		this.advanceAmount = advanceAmount;
		this.checkProduct = checkProduct;
		this.serviceStartDate = serviceStartDate;
		this.serviceEndDate = serviceEndDate;
		this.taxAmount = taxAmount;
		this.oneTimeCost = oneTimeCost;
		this.costOfFinance = costOfFinance;
		this.penalty = penalty;
		this.orderItems = orderItems;
		this.businessDeals = businessDeals;
		this.deliveryChallans = deliveryChallans;
		this.purchaseEntries = purchaseEntries;
		this.activities = activities;
		this.financialReports = financialReports;
		this.invoiceHeaders = invoiceHeaders;
		this.purchaseOrderHeaders = purchaseOrderHeaders;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIPPING_FK")
	public AccountAddress getAccountAddressByShippingFk() {
		return this.accountAddressByShippingFk;
	}

	public void setAccountAddressByShippingFk(AccountAddress accountAddressByShippingFk) {
		this.accountAddressByShippingFk = accountAddressByShippingFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BILLING_FK")
	public AccountAddress getAccountAddressByBillingFk() {
		return this.accountAddressByBillingFk;
	}

	public void setAccountAddressByBillingFk(AccountAddress accountAddressByBillingFk) {
		this.accountAddressByBillingFk = accountAddressByBillingFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TO_SHIP_ACCOUNT_FK")
	public AccountDetail getAccountDetailByToShipAccountFk() {
		return this.accountDetailByToShipAccountFk;
	}

	public void setAccountDetailByToShipAccountFk(AccountDetail accountDetailByToShipAccountFk) {
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACCOUNT_FK")
	public AccountDetail getAccountDetailByAccountFk() {
		return this.accountDetailByAccountFk;
	}

	public void setAccountDetailByAccountFk(AccountDetail accountDetailByAccountFk) {
		this.accountDetailByAccountFk = accountDetailByAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ODER_TYPE_FK")
	public CrmType getCrmType() {
		return this.crmType;
	}

	public void setCrmType(CrmType crmType) {
		this.crmType = crmType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CURRENCY_FK")
	public Currency getCurrency() {
		return this.currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_FK")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FINANCE_CONTACT_FK")
	public PersonDetail getPersonDetailByFinanceContactFk() {
		return this.personDetailByFinanceContactFk;
	}

	public void setPersonDetailByFinanceContactFk(PersonDetail personDetailByFinanceContactFk) {
		this.personDetailByFinanceContactFk = personDetailByFinanceContactFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSON_FK")
	public PersonDetail getPersonDetailByPersonFk() {
		return this.personDetailByPersonFk;
	}

	public void setPersonDetailByPersonFk(PersonDetail personDetailByPersonFk) {
		this.personDetailByPersonFk = personDetailByPersonFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIPPING_CONTACT_FK")
	public PersonDetail getPersonDetailByShippingContactFk() {
		return this.personDetailByShippingContactFk;
	}

	public void setPersonDetailByShippingContactFk(PersonDetail personDetailByShippingContactFk) {
		this.personDetailByShippingContactFk = personDetailByShippingContactFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUOTE_FK")
	public QuoteHeader getQuoteHeader() {
		return this.quoteHeader;
	}

	public void setQuoteHeader(QuoteHeader quoteHeader) {
		this.quoteHeader = quoteHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDER_STATUS_FK")
	public StatusItem getStatusItem() {
		return this.statusItem;
	}

	public void setStatusItem(StatusItem statusItem) {
		this.statusItem = statusItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OWNER_FK")
	public UserDetails getUserDetailsByOwnerFk() {
		return this.userDetailsByOwnerFk;
	}

	public void setUserDetailsByOwnerFk(UserDetails userDetailsByOwnerFk) {
		this.userDetailsByOwnerFk = userDetailsByOwnerFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY_USER_FK")
	public UserDetails getUserDetailsByLastModifiedByUserFk() {
		return this.userDetailsByLastModifiedByUserFk;
	}

	public void setUserDetailsByLastModifiedByUserFk(UserDetails userDetailsByLastModifiedByUserFk) {
		this.userDetailsByLastModifiedByUserFk = userDetailsByLastModifiedByUserFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY_USER_FK")
	public UserDetails getUserDetailsByCreatedByUserFk() {
		return this.userDetailsByCreatedByUserFk;
	}

	public void setUserDetailsByCreatedByUserFk(UserDetails userDetailsByCreatedByUserFk) {
		this.userDetailsByCreatedByUserFk = userDetailsByCreatedByUserFk;
	}

	@Column(name = "ACCOUNT_PHONE")
	public String getAccountPhone() {
		return this.accountPhone;
	}

	public void setAccountPhone(String accountPhone) {
		this.accountPhone = accountPhone;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CUST_PO_NUMBER")
	public String getCustPoNumber() {
		return this.custPoNumber;
	}

	public void setCustPoNumber(String custPoNumber) {
		this.custPoNumber = custPoNumber;
	}

	@Column(name = "CUST_PO_WARRANTY_TERM")
	public String getCustPoWarrantyTerm() {
		return this.custPoWarrantyTerm;
	}

	public void setCustPoWarrantyTerm(String custPoWarrantyTerm) {
		this.custPoWarrantyTerm = custPoWarrantyTerm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CUSTOMER_PO_DATE", length = 19)
	public Date getCustomerPoDate() {
		return this.customerPoDate;
	}

	public void setCustomerPoDate(Date customerPoDate) {
		this.customerPoDate = customerPoDate;
	}

	@Column(name = "DEAL_ID")
	public String getDealId() {
		return this.dealId;
	}

	public void setDealId(String dealId) {
		this.dealId = dealId;
	}

	@Column(name = "DELIVERY_TERMS_DAYS", nullable = false)
	public int getDeliveryTermsDays() {
		return this.deliveryTermsDays;
	}

	public void setDeliveryTermsDays(int deliveryTermsDays) {
		this.deliveryTermsDays = deliveryTermsDays;
	}

	@Column(name = "DISCOUNT", nullable = false, precision = 22, scale = 0)
	public double getDiscount() {
		return this.discount;
	}

	public void setDiscount(double discount) {
		this.discount = discount;
	}

	@Column(name = "FACTOR", nullable = false, precision = 22, scale = 0)
	public double getFactor() {
		return this.factor;
	}

	public void setFactor(double factor) {
		this.factor = factor;
	}

	@Column(name = "FINANCE_EMAIL")
	public String getFinanceEmail() {
		return this.financeEmail;
	}

	public void setFinanceEmail(String financeEmail) {
		this.financeEmail = financeEmail;
	}

	@Column(name = "FINANCE_PHN_NO")
	public String getFinancePhnNo() {
		return this.financePhnNo;
	}

	public void setFinancePhnNo(String financePhnNo) {
		this.financePhnNo = financePhnNo;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "LOCATION")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "OCTROI_TAX", nullable = false, precision = 22, scale = 0)
	public double getOctroiTax() {
		return this.octroiTax;
	}

	public void setOctroiTax(double octroiTax) {
		this.octroiTax = octroiTax;
	}

	@Column(name = "ORDER_NAME")
	public String getOrderName() {
		return this.orderName;
	}

	public void setOrderName(String orderName) {
		this.orderName = orderName;
	}

	@Column(name = "OTHER_EXPENSE", nullable = false, precision = 22, scale = 0)
	public double getOtherExpense() {
		return this.otherExpense;
	}

	public void setOtherExpense(double otherExpense) {
		this.otherExpense = otherExpense;
	}

	@Column(name = "PARTIAL_DELIVERY", nullable = false)
	public boolean isPartialDelivery() {
		return this.partialDelivery;
	}

	public void setPartialDelivery(boolean partialDelivery) {
		this.partialDelivery = partialDelivery;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PAYMENT_DATE", length = 19)
	public Date getPaymentDate() {
		return this.paymentDate;
	}

	public void setPaymentDate(Date paymentDate) {
		this.paymentDate = paymentDate;
	}

	@Column(name = "PAYMENT_TERMS_DAYS", nullable = false)
	public int getPaymentTermsDays() {
		return this.paymentTermsDays;
	}

	public void setPaymentTermsDays(int paymentTermsDays) {
		this.paymentTermsDays = paymentTermsDays;
	}

	@Column(name = "PERSON_EMAIL")
	public String getPersonEmail() {
		return this.personEmail;
	}

	public void setPersonEmail(String personEmail) {
		this.personEmail = personEmail;
	}

	@Column(name = "PERSON_PHONE")
	public String getPersonPhone() {
		return this.personPhone;
	}

	public void setPersonPhone(String personPhone) {
		this.personPhone = personPhone;
	}

	@Column(name = "PO_DOC_PATH")
	public String getPoDocPath() {
		return this.poDocPath;
	}

	public void setPoDocPath(String poDocPath) {
		this.poDocPath = poDocPath;
	}

	@Column(name = "PROJECT_EXPENCE", nullable = false, precision = 22, scale = 0)
	public double getProjectExpence() {
		return this.projectExpence;
	}

	public void setProjectExpence(double projectExpence) {
		this.projectExpence = projectExpence;
	}

	@Column(name = "REMARKS", length = 16777215)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "SALES_ORDER_MAIN_HEAD_DETAILS", length = 16777215)
	public String getSalesOrderMainHeadDetails() {
		return this.salesOrderMainHeadDetails;
	}

	public void setSalesOrderMainHeadDetails(String salesOrderMainHeadDetails) {
		this.salesOrderMainHeadDetails = salesOrderMainHeadDetails;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SHIPMENT_DATE", length = 19)
	public Date getShipmentDate() {
		return this.shipmentDate;
	}

	public void setShipmentDate(Date shipmentDate) {
		this.shipmentDate = shipmentDate;
	}

	@Column(name = "SHIPPING_COST", nullable = false, precision = 22, scale = 0)
	public double getShippingCost() {
		return this.shippingCost;
	}

	public void setShippingCost(double shippingCost) {
		this.shippingCost = shippingCost;
	}

	@Column(name = "SHIPPING_EMAIL")
	public String getShippingEmail() {
		return this.shippingEmail;
	}

	public void setShippingEmail(String shippingEmail) {
		this.shippingEmail = shippingEmail;
	}

	@Column(name = "SHIPPING_PHN_NO")
	public String getShippingPhnNo() {
		return this.shippingPhnNo;
	}

	public void setShippingPhnNo(String shippingPhnNo) {
		this.shippingPhnNo = shippingPhnNo;
	}

	@Column(name = "RENTAL_DURATION", nullable = false)
	public int getRentalDuration() {
		return this.rentalDuration;
	}

	public void setRentalDuration(int rentalDuration) {
		this.rentalDuration = rentalDuration;
	}

	@Column(name = "CUSTOMER_ACCEPTANCE", nullable = false)
	public boolean isCustomerAcceptance() {
		return this.customerAcceptance;
	}

	public void setCustomerAcceptance(boolean customerAcceptance) {
		this.customerAcceptance = customerAcceptance;
	}

	@Column(name = "CUSTOMER_REJECT_REASON")
	public String getCustomerRejectReason() {
		return this.customerRejectReason;
	}

	public void setCustomerRejectReason(String customerRejectReason) {
		this.customerRejectReason = customerRejectReason;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ACCEPT_REJECT_DATE", length = 19)
	public Date getAcceptRejectDate() {
		return this.acceptRejectDate;
	}

	public void setAcceptRejectDate(Date acceptRejectDate) {
		this.acceptRejectDate = acceptRejectDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FIRST_COMMIT_DATE", length = 10)
	public Date getFirstCommitDate() {
		return this.firstCommitDate;
	}

	public void setFirstCommitDate(Date firstCommitDate) {
		this.firstCommitDate = firstCommitDate;
	}

	@Column(name = "RENTAL_UOT", nullable = false)
	public int getRentalUot() {
		return this.rentalUot;
	}

	public void setRentalUot(int rentalUot) {
		this.rentalUot = rentalUot;
	}

	@Column(name = "PAYMENT_TERM_PERIOD")
	public String getPaymentTermPeriod() {
		return this.paymentTermPeriod;
	}

	public void setPaymentTermPeriod(String paymentTermPeriod) {
		this.paymentTermPeriod = paymentTermPeriod;
	}

	@Column(name = "PAYMENT_TYPE")
	public String getPaymentType() {
		return this.paymentType;
	}

	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	@Column(name = "ADVANCE_AMOUNT", nullable = false, precision = 22, scale = 0)
	public double getAdvanceAmount() {
		return this.advanceAmount;
	}

	public void setAdvanceAmount(double advanceAmount) {
		this.advanceAmount = advanceAmount;
	}

	@Column(name = "CHECK_PRODUCT", nullable = false)
	public boolean isCheckProduct() {
		return this.checkProduct;
	}

	public void setCheckProduct(boolean checkProduct) {
		this.checkProduct = checkProduct;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SERVICE_START_DATE", length = 19)
	public Date getServiceStartDate() {
		return this.serviceStartDate;
	}

	public void setServiceStartDate(Date serviceStartDate) {
		this.serviceStartDate = serviceStartDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SERVICE_END_DATE", length = 19)
	public Date getServiceEndDate() {
		return this.serviceEndDate;
	}

	public void setServiceEndDate(Date serviceEndDate) {
		this.serviceEndDate = serviceEndDate;
	}

	@Column(name = "TAX_AMOUNT", nullable = false, precision = 22, scale = 0)
	public double getTaxAmount() {
		return this.taxAmount;
	}

	public void setTaxAmount(double taxAmount) {
		this.taxAmount = taxAmount;
	}

	@Column(name = "ONE_TIME_COST", nullable = false, precision = 22, scale = 0)
	public double getOneTimeCost() {
		return this.oneTimeCost;
	}

	public void setOneTimeCost(double oneTimeCost) {
		this.oneTimeCost = oneTimeCost;
	}

	@Column(name = "COST_OF_FINANCE", nullable = false, precision = 22, scale = 0)
	public double getCostOfFinance() {
		return this.costOfFinance;
	}

	public void setCostOfFinance(double costOfFinance) {
		this.costOfFinance = costOfFinance;
	}

	@Column(name = "PENALTY", nullable = false, precision = 22, scale = 0)
	public double getPenalty() {
		return this.penalty;
	}

	public void setPenalty(double penalty) {
		this.penalty = penalty;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<OrderItem> getOrderItems() {
		return this.orderItems;
	}

	public void setOrderItems(Set<OrderItem> orderItems) {
		this.orderItems = orderItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<BusinessDeal> getBusinessDeals() {
		return this.businessDeals;
	}

	public void setBusinessDeals(Set<BusinessDeal> businessDeals) {
		this.businessDeals = businessDeals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<DeliveryChallan> getDeliveryChallans() {
		return this.deliveryChallans;
	}

	public void setDeliveryChallans(Set<DeliveryChallan> deliveryChallans) {
		this.deliveryChallans = deliveryChallans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<PurchaseEntry> getPurchaseEntries() {
		return this.purchaseEntries;
	}

	public void setPurchaseEntries(Set<PurchaseEntry> purchaseEntries) {
		this.purchaseEntries = purchaseEntries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<Activity> getActivities() {
		return this.activities;
	}

	public void setActivities(Set<Activity> activities) {
		this.activities = activities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<FinancialReport> getFinancialReports() {
		return this.financialReports;
	}

	public void setFinancialReports(Set<FinancialReport> financialReports) {
		this.financialReports = financialReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<InvoiceHeader> getInvoiceHeaders() {
		return this.invoiceHeaders;
	}

	public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
		this.invoiceHeaders = invoiceHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderHeader")
	public Set<PurchaseOrderHeader> getPurchaseOrderHeaders() {
		return this.purchaseOrderHeaders;
	}

	public void setPurchaseOrderHeaders(Set<PurchaseOrderHeader> purchaseOrderHeaders) {
		this.purchaseOrderHeaders = purchaseOrderHeaders;
	}

}
