package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserDetails generated by hbm2java
 */
@Entity
@Table(name = "USER_DETAILS", catalog = "namcrm")
public class UserDetails implements java.io.Serializable {

	private long id;
	private CrmType crmType;
	private Domain domain;
	private Organisation organisation;
	private OrgLocation orgLocation;
	private UserDetails userDetails;
	private String dotPath;
	private String firstName;
	private String forgotPassGuid;
	private String guid;
	private String inviteGuid;
	private String lastName;
	private String userLoginId;
	private String password;
	private String sessionId;
	private String userEmail;
	private String userPhone;
	private long userRole;
	private double salesTarget;
	private boolean isInactive;
	private long expertise;
	private String accessToken;
	private Set<AccountDetail> accountDetails = new HashSet<AccountDetail>(0);
	private Set<TaskComment> taskComments = new HashSet<TaskComment>(0);
	private Set<GrnHeader> grnHeadersForCreatedByUserFk = new HashSet<GrnHeader>(0);
	private Set<UserDetails> userDetailses = new HashSet<UserDetails>(0);
	private Set<Warehouse> warehouses = new HashSet<Warehouse>(0);
	private Set<TaskCcUser> taskCcUsers = new HashSet<TaskCcUser>(0);
	private Set<InvoiceHistory> invoiceHistoriesForLastModifiedByUserFk = new HashSet<InvoiceHistory>(0);
	private Set<DeliveryChallan> deliveryChallansForCreatedByUserFk = new HashSet<DeliveryChallan>(0);
	private Set<SalesOrderHeader> salesOrderHeadersForOwnerFk = new HashSet<SalesOrderHeader>(0);
	private Set<InvoiceHistory> invoiceHistoriesForCreatedByUserFk = new HashSet<InvoiceHistory>(0);
	private Set<GrnHeader> grnHeadersForLastModifiedByUserFk = new HashSet<GrnHeader>(0);
	private Set<PurchaseOrderHeader> purchaseOrderHeadersForCreatedBy = new HashSet<PurchaseOrderHeader>(0);
	private Set<PurchaseOrderHeader> purchaseOrderHeadersForLastModifiedBy = new HashSet<PurchaseOrderHeader>(0);
	private Set<Task> tasksForAssigneeUserFk = new HashSet<Task>(0);
	private Set<WeeklySalesCommits> weeklySalesCommitses = new HashSet<WeeklySalesCommits>(0);
	private Set<Activity> activitiesForLastModifiedByUserFk = new HashSet<Activity>(0);
	private Set<DealFollower> dealFollowers = new HashSet<DealFollower>(0);
	private Set<Task> tasksForCreatorUserFk = new HashSet<Task>(0);
	private Set<Activity> activitiesForCreatedByUserFk = new HashSet<Activity>(0);
	private Set<ReserveActivity> reserveActivitiesForCreatedByUserFk = new HashSet<ReserveActivity>(0);
	private Set<ReserveActivity> reserveActivitiesForLastModifiedByUserFk = new HashSet<ReserveActivity>(0);
	private Set<SalesOrderHeader> salesOrderHeadersForLastModifiedByUserFk = new HashSet<SalesOrderHeader>(0);
	private Set<FinancialReport> financialReports = new HashSet<FinancialReport>(0);
	private Set<Product> productsForCreatedByUserFk = new HashSet<Product>(0);
	private Set<InvoiceHeader> invoiceHeadersForLastModifiedBy = new HashSet<InvoiceHeader>(0);
	private Set<SalesOrderHeader> salesOrderHeadersForCreatedByUserFk = new HashSet<SalesOrderHeader>(0);
	private Set<Product> productsForLastModifiedByUserFk = new HashSet<Product>(0);
	private Set<DeliveryChallan> deliveryChallansForLastModifiedByUserFk = new HashSet<DeliveryChallan>(0);
	private Set<BusinessDeal> businessDealsForOwnerFk = new HashSet<BusinessDeal>(0);
	private Set<QuoteHeader> quoteHeadersForLastModifiedUserFk = new HashSet<QuoteHeader>(0);
	private Set<DealActivity> dealActivities = new HashSet<DealActivity>(0);
	private Set<QuoteHeader> quoteHeadersForCreatedByUserFk = new HashSet<QuoteHeader>(0);
	private Set<BusinessDealHistory> businessDealHistories = new HashSet<BusinessDealHistory>(0);
	private Set<AccountActivity> accountActivities = new HashSet<AccountActivity>(0);
	private Set<BusinessDeal> businessDealsForLastModifiedBy = new HashSet<BusinessDeal>(0);
	private Set<InventoryItem> inventoryItemsForCreatedByUserFk = new HashSet<InventoryItem>(0);
	private Set<BusinessDeal> businessDealsForSponsorUserFk = new HashSet<BusinessDeal>(0);
	private Set<BusinessDeal> businessDealsForCreatedBy = new HashSet<BusinessDeal>(0);
	private Set<SalesPerformance> salesPerformances = new HashSet<SalesPerformance>(0);
	private Set<InvoiceHeader> invoiceHeadersForCreatedBy = new HashSet<InvoiceHeader>(0);
	private Set<InventoryUniqueItem> inventoryUniqueItemsForCreatedByUserFk = new HashSet<InventoryUniqueItem>(0);
	private Set<PurchaseEntry> purchaseEntriesForLastModifiedByUserFk = new HashSet<PurchaseEntry>(0);
	private Set<PurchaseEntry> purchaseEntriesForCreatedBy = new HashSet<PurchaseEntry>(0);
	private Set<InventoryItem> inventoryItemsForLastModifiedByUserFk = new HashSet<InventoryItem>(0);
	private Set<InventoryUniqueItem> inventoryUniqueItemsForLastModifiedByUserFk = new HashSet<InventoryUniqueItem>(0);

	public UserDetails() {
	}

	public UserDetails(long id, long userRole, double salesTarget, boolean isInactive, long expertise) {
		this.id = id;
		this.userRole = userRole;
		this.salesTarget = salesTarget;
		this.isInactive = isInactive;
		this.expertise = expertise;
	}

	public UserDetails(long id, CrmType crmType, Domain domain, Organisation organisation, OrgLocation orgLocation,
			UserDetails userDetails, String dotPath, String firstName, String forgotPassGuid, String guid,
			String inviteGuid, String lastName, String userLoginId, String password, String sessionId, String userEmail,
			String userPhone, long userRole, double salesTarget, boolean isInactive, long expertise, String accessToken,
			Set<AccountDetail> accountDetails, Set<TaskComment> taskComments,
			Set<GrnHeader> grnHeadersForCreatedByUserFk, Set<UserDetails> userDetailses, Set<Warehouse> warehouses,
			Set<TaskCcUser> taskCcUsers, Set<InvoiceHistory> invoiceHistoriesForLastModifiedByUserFk,
			Set<DeliveryChallan> deliveryChallansForCreatedByUserFk, Set<SalesOrderHeader> salesOrderHeadersForOwnerFk,
			Set<InvoiceHistory> invoiceHistoriesForCreatedByUserFk, Set<GrnHeader> grnHeadersForLastModifiedByUserFk,
			Set<PurchaseOrderHeader> purchaseOrderHeadersForCreatedBy,
			Set<PurchaseOrderHeader> purchaseOrderHeadersForLastModifiedBy, Set<Task> tasksForAssigneeUserFk,
			Set<WeeklySalesCommits> weeklySalesCommitses, Set<Activity> activitiesForLastModifiedByUserFk,
			Set<DealFollower> dealFollowers, Set<Task> tasksForCreatorUserFk,
			Set<Activity> activitiesForCreatedByUserFk, Set<ReserveActivity> reserveActivitiesForCreatedByUserFk,
			Set<ReserveActivity> reserveActivitiesForLastModifiedByUserFk,
			Set<SalesOrderHeader> salesOrderHeadersForLastModifiedByUserFk, Set<FinancialReport> financialReports,
			Set<Product> productsForCreatedByUserFk, Set<InvoiceHeader> invoiceHeadersForLastModifiedBy,
			Set<SalesOrderHeader> salesOrderHeadersForCreatedByUserFk, Set<Product> productsForLastModifiedByUserFk,
			Set<DeliveryChallan> deliveryChallansForLastModifiedByUserFk, Set<BusinessDeal> businessDealsForOwnerFk,
			Set<QuoteHeader> quoteHeadersForLastModifiedUserFk, Set<DealActivity> dealActivities,
			Set<QuoteHeader> quoteHeadersForCreatedByUserFk, Set<BusinessDealHistory> businessDealHistories,
			Set<AccountActivity> accountActivities, Set<BusinessDeal> businessDealsForLastModifiedBy,
			Set<InventoryItem> inventoryItemsForCreatedByUserFk, Set<BusinessDeal> businessDealsForSponsorUserFk,
			Set<BusinessDeal> businessDealsForCreatedBy, Set<SalesPerformance> salesPerformances,
			Set<InvoiceHeader> invoiceHeadersForCreatedBy,
			Set<InventoryUniqueItem> inventoryUniqueItemsForCreatedByUserFk,
			Set<PurchaseEntry> purchaseEntriesForLastModifiedByUserFk, Set<PurchaseEntry> purchaseEntriesForCreatedBy,
			Set<InventoryItem> inventoryItemsForLastModifiedByUserFk,
			Set<InventoryUniqueItem> inventoryUniqueItemsForLastModifiedByUserFk) {
		this.id = id;
		this.crmType = crmType;
		this.domain = domain;
		this.organisation = organisation;
		this.orgLocation = orgLocation;
		this.userDetails = userDetails;
		this.dotPath = dotPath;
		this.firstName = firstName;
		this.forgotPassGuid = forgotPassGuid;
		this.guid = guid;
		this.inviteGuid = inviteGuid;
		this.lastName = lastName;
		this.userLoginId = userLoginId;
		this.password = password;
		this.sessionId = sessionId;
		this.userEmail = userEmail;
		this.userPhone = userPhone;
		this.userRole = userRole;
		this.salesTarget = salesTarget;
		this.isInactive = isInactive;
		this.expertise = expertise;
		this.accessToken = accessToken;
		this.accountDetails = accountDetails;
		this.taskComments = taskComments;
		this.grnHeadersForCreatedByUserFk = grnHeadersForCreatedByUserFk;
		this.userDetailses = userDetailses;
		this.warehouses = warehouses;
		this.taskCcUsers = taskCcUsers;
		this.invoiceHistoriesForLastModifiedByUserFk = invoiceHistoriesForLastModifiedByUserFk;
		this.deliveryChallansForCreatedByUserFk = deliveryChallansForCreatedByUserFk;
		this.salesOrderHeadersForOwnerFk = salesOrderHeadersForOwnerFk;
		this.invoiceHistoriesForCreatedByUserFk = invoiceHistoriesForCreatedByUserFk;
		this.grnHeadersForLastModifiedByUserFk = grnHeadersForLastModifiedByUserFk;
		this.purchaseOrderHeadersForCreatedBy = purchaseOrderHeadersForCreatedBy;
		this.purchaseOrderHeadersForLastModifiedBy = purchaseOrderHeadersForLastModifiedBy;
		this.tasksForAssigneeUserFk = tasksForAssigneeUserFk;
		this.weeklySalesCommitses = weeklySalesCommitses;
		this.activitiesForLastModifiedByUserFk = activitiesForLastModifiedByUserFk;
		this.dealFollowers = dealFollowers;
		this.tasksForCreatorUserFk = tasksForCreatorUserFk;
		this.activitiesForCreatedByUserFk = activitiesForCreatedByUserFk;
		this.reserveActivitiesForCreatedByUserFk = reserveActivitiesForCreatedByUserFk;
		this.reserveActivitiesForLastModifiedByUserFk = reserveActivitiesForLastModifiedByUserFk;
		this.salesOrderHeadersForLastModifiedByUserFk = salesOrderHeadersForLastModifiedByUserFk;
		this.financialReports = financialReports;
		this.productsForCreatedByUserFk = productsForCreatedByUserFk;
		this.invoiceHeadersForLastModifiedBy = invoiceHeadersForLastModifiedBy;
		this.salesOrderHeadersForCreatedByUserFk = salesOrderHeadersForCreatedByUserFk;
		this.productsForLastModifiedByUserFk = productsForLastModifiedByUserFk;
		this.deliveryChallansForLastModifiedByUserFk = deliveryChallansForLastModifiedByUserFk;
		this.businessDealsForOwnerFk = businessDealsForOwnerFk;
		this.quoteHeadersForLastModifiedUserFk = quoteHeadersForLastModifiedUserFk;
		this.dealActivities = dealActivities;
		this.quoteHeadersForCreatedByUserFk = quoteHeadersForCreatedByUserFk;
		this.businessDealHistories = businessDealHistories;
		this.accountActivities = accountActivities;
		this.businessDealsForLastModifiedBy = businessDealsForLastModifiedBy;
		this.inventoryItemsForCreatedByUserFk = inventoryItemsForCreatedByUserFk;
		this.businessDealsForSponsorUserFk = businessDealsForSponsorUserFk;
		this.businessDealsForCreatedBy = businessDealsForCreatedBy;
		this.salesPerformances = salesPerformances;
		this.invoiceHeadersForCreatedBy = invoiceHeadersForCreatedBy;
		this.inventoryUniqueItemsForCreatedByUserFk = inventoryUniqueItemsForCreatedByUserFk;
		this.purchaseEntriesForLastModifiedByUserFk = purchaseEntriesForLastModifiedByUserFk;
		this.purchaseEntriesForCreatedBy = purchaseEntriesForCreatedBy;
		this.inventoryItemsForLastModifiedByUserFk = inventoryItemsForLastModifiedByUserFk;
		this.inventoryUniqueItemsForLastModifiedByUserFk = inventoryUniqueItemsForLastModifiedByUserFk;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CRMTYPE_FK")
	public CrmType getCrmType() {
		return this.crmType;
	}

	public void setCrmType(CrmType crmType) {
		this.crmType = crmType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORGANIZATION_FK")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORGLOCATION_FK")
	public OrgLocation getOrgLocation() {
		return this.orgLocation;
	}

	public void setOrgLocation(OrgLocation orgLocation) {
		this.orgLocation = orgLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MANAGER_FK")
	public UserDetails getUserDetails() {
		return this.userDetails;
	}

	public void setUserDetails(UserDetails userDetails) {
		this.userDetails = userDetails;
	}

	@Column(name = "DOT_PATH")
	public String getDotPath() {
		return this.dotPath;
	}

	public void setDotPath(String dotPath) {
		this.dotPath = dotPath;
	}

	@Column(name = "FIRST_NAME")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "FORGOT_PASS_GUID")
	public String getForgotPassGuid() {
		return this.forgotPassGuid;
	}

	public void setForgotPassGuid(String forgotPassGuid) {
		this.forgotPassGuid = forgotPassGuid;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Column(name = "INVITE_GUID")
	public String getInviteGuid() {
		return this.inviteGuid;
	}

	public void setInviteGuid(String inviteGuid) {
		this.inviteGuid = inviteGuid;
	}

	@Column(name = "LAST_NAME")
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "USER_LOGIN_ID")
	public String getUserLoginId() {
		return this.userLoginId;
	}

	public void setUserLoginId(String userLoginId) {
		this.userLoginId = userLoginId;
	}

	@Column(name = "PASSWORD")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "SESSION_ID")
	public String getSessionId() {
		return this.sessionId;
	}

	public void setSessionId(String sessionId) {
		this.sessionId = sessionId;
	}

	@Column(name = "USER_EMAIL")
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "USER_PHONE")
	public String getUserPhone() {
		return this.userPhone;
	}

	public void setUserPhone(String userPhone) {
		this.userPhone = userPhone;
	}

	@Column(name = "USER_ROLE", nullable = false)
	public long getUserRole() {
		return this.userRole;
	}

	public void setUserRole(long userRole) {
		this.userRole = userRole;
	}

	@Column(name = "SALES_TARGET", nullable = false, precision = 22, scale = 0)
	public double getSalesTarget() {
		return this.salesTarget;
	}

	public void setSalesTarget(double salesTarget) {
		this.salesTarget = salesTarget;
	}

	@Column(name = "IS_INACTIVE", nullable = false)
	public boolean isIsInactive() {
		return this.isInactive;
	}

	public void setIsInactive(boolean isInactive) {
		this.isInactive = isInactive;
	}

	@Column(name = "EXPERTISE", nullable = false)
	public long getExpertise() {
		return this.expertise;
	}

	public void setExpertise(long expertise) {
		this.expertise = expertise;
	}

	@Column(name = "ACCESS_TOKEN")
	public String getAccessToken() {
		return this.accessToken;
	}

	public void setAccessToken(String accessToken) {
		this.accessToken = accessToken;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<AccountDetail> getAccountDetails() {
		return this.accountDetails;
	}

	public void setAccountDetails(Set<AccountDetail> accountDetails) {
		this.accountDetails = accountDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<TaskComment> getTaskComments() {
		return this.taskComments;
	}

	public void setTaskComments(Set<TaskComment> taskComments) {
		this.taskComments = taskComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<GrnHeader> getGrnHeadersForCreatedByUserFk() {
		return this.grnHeadersForCreatedByUserFk;
	}

	public void setGrnHeadersForCreatedByUserFk(Set<GrnHeader> grnHeadersForCreatedByUserFk) {
		this.grnHeadersForCreatedByUserFk = grnHeadersForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<UserDetails> getUserDetailses() {
		return this.userDetailses;
	}

	public void setUserDetailses(Set<UserDetails> userDetailses) {
		this.userDetailses = userDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<Warehouse> getWarehouses() {
		return this.warehouses;
	}

	public void setWarehouses(Set<Warehouse> warehouses) {
		this.warehouses = warehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<TaskCcUser> getTaskCcUsers() {
		return this.taskCcUsers;
	}

	public void setTaskCcUsers(Set<TaskCcUser> taskCcUsers) {
		this.taskCcUsers = taskCcUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<InvoiceHistory> getInvoiceHistoriesForLastModifiedByUserFk() {
		return this.invoiceHistoriesForLastModifiedByUserFk;
	}

	public void setInvoiceHistoriesForLastModifiedByUserFk(
			Set<InvoiceHistory> invoiceHistoriesForLastModifiedByUserFk) {
		this.invoiceHistoriesForLastModifiedByUserFk = invoiceHistoriesForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<DeliveryChallan> getDeliveryChallansForCreatedByUserFk() {
		return this.deliveryChallansForCreatedByUserFk;
	}

	public void setDeliveryChallansForCreatedByUserFk(Set<DeliveryChallan> deliveryChallansForCreatedByUserFk) {
		this.deliveryChallansForCreatedByUserFk = deliveryChallansForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByOwnerFk")
	public Set<SalesOrderHeader> getSalesOrderHeadersForOwnerFk() {
		return this.salesOrderHeadersForOwnerFk;
	}

	public void setSalesOrderHeadersForOwnerFk(Set<SalesOrderHeader> salesOrderHeadersForOwnerFk) {
		this.salesOrderHeadersForOwnerFk = salesOrderHeadersForOwnerFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<InvoiceHistory> getInvoiceHistoriesForCreatedByUserFk() {
		return this.invoiceHistoriesForCreatedByUserFk;
	}

	public void setInvoiceHistoriesForCreatedByUserFk(Set<InvoiceHistory> invoiceHistoriesForCreatedByUserFk) {
		this.invoiceHistoriesForCreatedByUserFk = invoiceHistoriesForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<GrnHeader> getGrnHeadersForLastModifiedByUserFk() {
		return this.grnHeadersForLastModifiedByUserFk;
	}

	public void setGrnHeadersForLastModifiedByUserFk(Set<GrnHeader> grnHeadersForLastModifiedByUserFk) {
		this.grnHeadersForLastModifiedByUserFk = grnHeadersForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedBy")
	public Set<PurchaseOrderHeader> getPurchaseOrderHeadersForCreatedBy() {
		return this.purchaseOrderHeadersForCreatedBy;
	}

	public void setPurchaseOrderHeadersForCreatedBy(Set<PurchaseOrderHeader> purchaseOrderHeadersForCreatedBy) {
		this.purchaseOrderHeadersForCreatedBy = purchaseOrderHeadersForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedBy")
	public Set<PurchaseOrderHeader> getPurchaseOrderHeadersForLastModifiedBy() {
		return this.purchaseOrderHeadersForLastModifiedBy;
	}

	public void setPurchaseOrderHeadersForLastModifiedBy(
			Set<PurchaseOrderHeader> purchaseOrderHeadersForLastModifiedBy) {
		this.purchaseOrderHeadersForLastModifiedBy = purchaseOrderHeadersForLastModifiedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByAssigneeUserFk")
	public Set<Task> getTasksForAssigneeUserFk() {
		return this.tasksForAssigneeUserFk;
	}

	public void setTasksForAssigneeUserFk(Set<Task> tasksForAssigneeUserFk) {
		this.tasksForAssigneeUserFk = tasksForAssigneeUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<WeeklySalesCommits> getWeeklySalesCommitses() {
		return this.weeklySalesCommitses;
	}

	public void setWeeklySalesCommitses(Set<WeeklySalesCommits> weeklySalesCommitses) {
		this.weeklySalesCommitses = weeklySalesCommitses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<Activity> getActivitiesForLastModifiedByUserFk() {
		return this.activitiesForLastModifiedByUserFk;
	}

	public void setActivitiesForLastModifiedByUserFk(Set<Activity> activitiesForLastModifiedByUserFk) {
		this.activitiesForLastModifiedByUserFk = activitiesForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<DealFollower> getDealFollowers() {
		return this.dealFollowers;
	}

	public void setDealFollowers(Set<DealFollower> dealFollowers) {
		this.dealFollowers = dealFollowers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatorUserFk")
	public Set<Task> getTasksForCreatorUserFk() {
		return this.tasksForCreatorUserFk;
	}

	public void setTasksForCreatorUserFk(Set<Task> tasksForCreatorUserFk) {
		this.tasksForCreatorUserFk = tasksForCreatorUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<Activity> getActivitiesForCreatedByUserFk() {
		return this.activitiesForCreatedByUserFk;
	}

	public void setActivitiesForCreatedByUserFk(Set<Activity> activitiesForCreatedByUserFk) {
		this.activitiesForCreatedByUserFk = activitiesForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<ReserveActivity> getReserveActivitiesForCreatedByUserFk() {
		return this.reserveActivitiesForCreatedByUserFk;
	}

	public void setReserveActivitiesForCreatedByUserFk(Set<ReserveActivity> reserveActivitiesForCreatedByUserFk) {
		this.reserveActivitiesForCreatedByUserFk = reserveActivitiesForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<ReserveActivity> getReserveActivitiesForLastModifiedByUserFk() {
		return this.reserveActivitiesForLastModifiedByUserFk;
	}

	public void setReserveActivitiesForLastModifiedByUserFk(
			Set<ReserveActivity> reserveActivitiesForLastModifiedByUserFk) {
		this.reserveActivitiesForLastModifiedByUserFk = reserveActivitiesForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<SalesOrderHeader> getSalesOrderHeadersForLastModifiedByUserFk() {
		return this.salesOrderHeadersForLastModifiedByUserFk;
	}

	public void setSalesOrderHeadersForLastModifiedByUserFk(
			Set<SalesOrderHeader> salesOrderHeadersForLastModifiedByUserFk) {
		this.salesOrderHeadersForLastModifiedByUserFk = salesOrderHeadersForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<FinancialReport> getFinancialReports() {
		return this.financialReports;
	}

	public void setFinancialReports(Set<FinancialReport> financialReports) {
		this.financialReports = financialReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<Product> getProductsForCreatedByUserFk() {
		return this.productsForCreatedByUserFk;
	}

	public void setProductsForCreatedByUserFk(Set<Product> productsForCreatedByUserFk) {
		this.productsForCreatedByUserFk = productsForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedBy")
	public Set<InvoiceHeader> getInvoiceHeadersForLastModifiedBy() {
		return this.invoiceHeadersForLastModifiedBy;
	}

	public void setInvoiceHeadersForLastModifiedBy(Set<InvoiceHeader> invoiceHeadersForLastModifiedBy) {
		this.invoiceHeadersForLastModifiedBy = invoiceHeadersForLastModifiedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<SalesOrderHeader> getSalesOrderHeadersForCreatedByUserFk() {
		return this.salesOrderHeadersForCreatedByUserFk;
	}

	public void setSalesOrderHeadersForCreatedByUserFk(Set<SalesOrderHeader> salesOrderHeadersForCreatedByUserFk) {
		this.salesOrderHeadersForCreatedByUserFk = salesOrderHeadersForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<Product> getProductsForLastModifiedByUserFk() {
		return this.productsForLastModifiedByUserFk;
	}

	public void setProductsForLastModifiedByUserFk(Set<Product> productsForLastModifiedByUserFk) {
		this.productsForLastModifiedByUserFk = productsForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<DeliveryChallan> getDeliveryChallansForLastModifiedByUserFk() {
		return this.deliveryChallansForLastModifiedByUserFk;
	}

	public void setDeliveryChallansForLastModifiedByUserFk(
			Set<DeliveryChallan> deliveryChallansForLastModifiedByUserFk) {
		this.deliveryChallansForLastModifiedByUserFk = deliveryChallansForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByOwnerFk")
	public Set<BusinessDeal> getBusinessDealsForOwnerFk() {
		return this.businessDealsForOwnerFk;
	}

	public void setBusinessDealsForOwnerFk(Set<BusinessDeal> businessDealsForOwnerFk) {
		this.businessDealsForOwnerFk = businessDealsForOwnerFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedUserFk")
	public Set<QuoteHeader> getQuoteHeadersForLastModifiedUserFk() {
		return this.quoteHeadersForLastModifiedUserFk;
	}

	public void setQuoteHeadersForLastModifiedUserFk(Set<QuoteHeader> quoteHeadersForLastModifiedUserFk) {
		this.quoteHeadersForLastModifiedUserFk = quoteHeadersForLastModifiedUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<DealActivity> getDealActivities() {
		return this.dealActivities;
	}

	public void setDealActivities(Set<DealActivity> dealActivities) {
		this.dealActivities = dealActivities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<QuoteHeader> getQuoteHeadersForCreatedByUserFk() {
		return this.quoteHeadersForCreatedByUserFk;
	}

	public void setQuoteHeadersForCreatedByUserFk(Set<QuoteHeader> quoteHeadersForCreatedByUserFk) {
		this.quoteHeadersForCreatedByUserFk = quoteHeadersForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<BusinessDealHistory> getBusinessDealHistories() {
		return this.businessDealHistories;
	}

	public void setBusinessDealHistories(Set<BusinessDealHistory> businessDealHistories) {
		this.businessDealHistories = businessDealHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<AccountActivity> getAccountActivities() {
		return this.accountActivities;
	}

	public void setAccountActivities(Set<AccountActivity> accountActivities) {
		this.accountActivities = accountActivities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedBy")
	public Set<BusinessDeal> getBusinessDealsForLastModifiedBy() {
		return this.businessDealsForLastModifiedBy;
	}

	public void setBusinessDealsForLastModifiedBy(Set<BusinessDeal> businessDealsForLastModifiedBy) {
		this.businessDealsForLastModifiedBy = businessDealsForLastModifiedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<InventoryItem> getInventoryItemsForCreatedByUserFk() {
		return this.inventoryItemsForCreatedByUserFk;
	}

	public void setInventoryItemsForCreatedByUserFk(Set<InventoryItem> inventoryItemsForCreatedByUserFk) {
		this.inventoryItemsForCreatedByUserFk = inventoryItemsForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsBySponsorUserFk")
	public Set<BusinessDeal> getBusinessDealsForSponsorUserFk() {
		return this.businessDealsForSponsorUserFk;
	}

	public void setBusinessDealsForSponsorUserFk(Set<BusinessDeal> businessDealsForSponsorUserFk) {
		this.businessDealsForSponsorUserFk = businessDealsForSponsorUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedBy")
	public Set<BusinessDeal> getBusinessDealsForCreatedBy() {
		return this.businessDealsForCreatedBy;
	}

	public void setBusinessDealsForCreatedBy(Set<BusinessDeal> businessDealsForCreatedBy) {
		this.businessDealsForCreatedBy = businessDealsForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<SalesPerformance> getSalesPerformances() {
		return this.salesPerformances;
	}

	public void setSalesPerformances(Set<SalesPerformance> salesPerformances) {
		this.salesPerformances = salesPerformances;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedBy")
	public Set<InvoiceHeader> getInvoiceHeadersForCreatedBy() {
		return this.invoiceHeadersForCreatedBy;
	}

	public void setInvoiceHeadersForCreatedBy(Set<InvoiceHeader> invoiceHeadersForCreatedBy) {
		this.invoiceHeadersForCreatedBy = invoiceHeadersForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedByUserFk")
	public Set<InventoryUniqueItem> getInventoryUniqueItemsForCreatedByUserFk() {
		return this.inventoryUniqueItemsForCreatedByUserFk;
	}

	public void setInventoryUniqueItemsForCreatedByUserFk(
			Set<InventoryUniqueItem> inventoryUniqueItemsForCreatedByUserFk) {
		this.inventoryUniqueItemsForCreatedByUserFk = inventoryUniqueItemsForCreatedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<PurchaseEntry> getPurchaseEntriesForLastModifiedByUserFk() {
		return this.purchaseEntriesForLastModifiedByUserFk;
	}

	public void setPurchaseEntriesForLastModifiedByUserFk(Set<PurchaseEntry> purchaseEntriesForLastModifiedByUserFk) {
		this.purchaseEntriesForLastModifiedByUserFk = purchaseEntriesForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatedBy")
	public Set<PurchaseEntry> getPurchaseEntriesForCreatedBy() {
		return this.purchaseEntriesForCreatedBy;
	}

	public void setPurchaseEntriesForCreatedBy(Set<PurchaseEntry> purchaseEntriesForCreatedBy) {
		this.purchaseEntriesForCreatedBy = purchaseEntriesForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<InventoryItem> getInventoryItemsForLastModifiedByUserFk() {
		return this.inventoryItemsForLastModifiedByUserFk;
	}

	public void setInventoryItemsForLastModifiedByUserFk(Set<InventoryItem> inventoryItemsForLastModifiedByUserFk) {
		this.inventoryItemsForLastModifiedByUserFk = inventoryItemsForLastModifiedByUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByLastModifiedByUserFk")
	public Set<InventoryUniqueItem> getInventoryUniqueItemsForLastModifiedByUserFk() {
		return this.inventoryUniqueItemsForLastModifiedByUserFk;
	}

	public void setInventoryUniqueItemsForLastModifiedByUserFk(
			Set<InventoryUniqueItem> inventoryUniqueItemsForLastModifiedByUserFk) {
		this.inventoryUniqueItemsForLastModifiedByUserFk = inventoryUniqueItemsForLastModifiedByUserFk;
	}

}
