package com.connectivity.vikray.entity;
// Generated 27 Dec, 2018 3:06:26 PM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserDetails generated by hbm2java
 */
@Entity
@Table(name = "USER_DETAILS", catalog = "vikrayPmo")
public class UserDetails implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	
	private long id;
	private Domain domain;
	private String organisation;
	// private OrgLocation orgLocation;
	private String orgLocation;
	private UserDetails userDetails;
	private String dotPath;
	private String firstName;
	private String forgotPassGuid;
	private String guid;
	private String inviteGuid;
	private String lastName;
	private String userLoginId;
	private String password;
	private String sessionId;
	private String userEmail;
	private String userPhone;
	private long userRole;
	private boolean isInactive;
	private long expertise;
	private String accessToken;
	// private Set<AccountDetail> accountDetails = new HashSet<AccountDetail>(0);
	private String accountDetails;

	private Set<TaskComment> taskComments = new HashSet<TaskComment>(0);
	private Set<TaskCcUser> taskCcUsers = new HashSet<TaskCcUser>(0);
	private Set<Task> tasksForAssigneeUserFk = new HashSet<Task>(0);
	private Set<Task> tasksForCreatorUserFk = new HashSet<Task>(0);

	public UserDetails() {
	}

	public UserDetails(long id) {
		this.id = id;
	}
	
	public UserDetails(long id, Domain domain, String organisation, String orgLocation, UserDetails userDetails,
			String dotPath, String firstName, String forgotPassGuid, String guid, String inviteGuid, String lastName,
			String userLoginId, String password, String sessionId, String userEmail, String userPhone, long userRole,
			boolean isInactive, long expertise, String accessToken, String accountDetails, Set<Phase> createPhases,
			Set<Phase> updatePhases, Set<Project> createProject, Set<Project> updateProject, Set<Project> projects,
			Set<TaskComment> taskComments, Set<TaskCcUser> taskCcUsers, Set<Task> createTask, Set<Task> updateTask,
			Set<Task> tasksForAssigneeUserFk, Set<Task> tasksForCreatorUserFk) {
		super();
		this.id = id;
		this.domain = domain;
		this.organisation = organisation;
		this.orgLocation = orgLocation;
		this.userDetails = userDetails;
		this.dotPath = dotPath;
		this.firstName = firstName;
		this.forgotPassGuid = forgotPassGuid;
		this.guid = guid;
		this.inviteGuid = inviteGuid;
		this.lastName = lastName;
		this.userLoginId = userLoginId;
		this.password = password;
		this.sessionId = sessionId;
		this.userEmail = userEmail;
		this.userPhone = userPhone;
		this.userRole = userRole;
		this.isInactive = isInactive;
		this.expertise = expertise;
		this.accessToken = accessToken;
		this.accountDetails = accountDetails;
		this.taskComments = taskComments;
		this.taskCcUsers = taskCcUsers;
		this.tasksForAssigneeUserFk = tasksForAssigneeUserFk;
		this.tasksForCreatorUserFk = tasksForCreatorUserFk;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}
	
	public void setId(long id) {
		this.id = id;
	}
	
    
	@Column(name = "ORG_LOCATION")
	public String getOrgLocation() {
		return orgLocation;
	}

	public void setOrganisation(String organisation) {
		this.organisation = organisation;
	}

	@Column(name = "ACCOUNT_DETAILS")
	public String getAccountDetails() {
		return accountDetails;
	}

	public void setAccountDetails(String accountDetails) {
		this.accountDetails = accountDetails;
	}

	@Column(name = "ORGANISATION")
	public String getOrganisation() {
		return organisation;
	}

	public void setOrgLocation(String orgLocation) {
		this.orgLocation = orgLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MANAGER_FK")
	public UserDetails getUserDetails() {
		return this.userDetails;
	}

	public void setUserDetails(UserDetails userDetails) {
		this.userDetails = userDetails;
	}

	@Column(name = "DOT_PATH")
	public String getDotPath() {
		return this.dotPath;
	}

	public void setDotPath(String dotPath) {
		this.dotPath = dotPath;
	}

	@Column(name = "FIRST_NAME")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "FORGOT_PASS_GUID")
	public String getForgotPassGuid() {
		return this.forgotPassGuid;
	}

	public void setForgotPassGuid(String forgotPassGuid) {
		this.forgotPassGuid = forgotPassGuid;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Column(name = "INVITE_GUID")
	public String getInviteGuid() {
		return this.inviteGuid;
	}

	public void setInviteGuid(String inviteGuid) {
		this.inviteGuid = inviteGuid;
	}

	@Column(name = "LAST_NAME")
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "USER_LOGIN_ID")
	public String getUserLoginId() {
		return this.userLoginId;
	}

	public void setUserLoginId(String userLoginId) {
		this.userLoginId = userLoginId;
	}

	@Column(name = "PASSWORD")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "SESSION_ID")
	public String getSessionId() {
		return this.sessionId;
	}

	public void setSessionId(String sessionId) {
		this.sessionId = sessionId;
	}

	@Column(name = "USER_EMAIL")
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "USER_PHONE")
	public String getUserPhone() {
		return this.userPhone;
	}

	public void setUserPhone(String userPhone) {
		this.userPhone = userPhone;
	}

	@Column(name = "USER_ROLE", nullable = false)
	public long getUserRole() {
		return this.userRole;
	}

	public void setUserRole(long userRole) {
		this.userRole = userRole;
	}

	@Column(name = "IS_INACTIVE")
	public boolean isInactive() {
		return isInactive;
	}

	public void setInactive(boolean isInactive) {
		this.isInactive = isInactive;
	}

	@Column(name = "EXPERTISE", nullable = false)
	public long getExpertise() {
		return this.expertise;
	}

	

	public void setExpertise(long expertise) {
		this.expertise = expertise;
	}

	@Column(name = "ACCESS_TOKEN")
	public String getAccessToken() {
		return this.accessToken;
	}

	public void setAccessToken(String accessToken) {
		this.accessToken = accessToken;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<TaskComment> getTaskComments() {
		return this.taskComments;
	}

	public void setTaskComments(Set<TaskComment> taskComments) {
		this.taskComments = taskComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetails")
	public Set<TaskCcUser> getTaskCcUsers() {
		return this.taskCcUsers;
	}

	public void setTaskCcUsers(Set<TaskCcUser> taskCcUsers) {
		this.taskCcUsers = taskCcUsers;
	}
	
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByAssigneeUserFk")
	public Set<Task> getTasksForAssigneeUserFk() {
		return this.tasksForAssigneeUserFk;
	}

	public void setTasksForAssigneeUserFk(Set<Task> tasksForAssigneeUserFk) {
		this.tasksForAssigneeUserFk = tasksForAssigneeUserFk;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDetailsByCreatorUserFk")
	public Set<Task> getTasksForCreatorUserFk() {
		return this.tasksForCreatorUserFk;
	}

	public void setTasksForCreatorUserFk(Set<Task> tasksForCreatorUserFk) {
		this.tasksForCreatorUserFk = tasksForCreatorUserFk;
	}

}
