package com.connectivity.vikray.entity;
// Generated 6 Dec, 2018 11:37:25 AM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PurchaseOrderHeader generated by hbm2java
 */
@Entity
@Table(name = "PURCHASE_ORDER_HEADER", catalog = "namcrm")
public class PurchaseOrderHeader implements java.io.Serializable {

	private long id;
	private AccountAddress accountAddress;
	private AccountDetail accountDetailByAccountId;
	private AccountDetail accountDetailByToShipAccountFk;
	private BusinessDeal businessDeal;
	private CrmType crmType;
	private Currency currency;
	private Domain domain;
	private Organisation organisation;
	private OrganisationAddress organisationAddress;
	private OrgLocation orgLocation;
	private PersonDetail personDetail;
	private QuoteHeader quoteHeader;
	private SalesOrderHeader salesOrderHeader;
	private StatusItem statusItem;
	private UserDetails userDetailsByCreatedBy;
	private UserDetails userDetailsByLastModifiedBy;
	private Date acceptRejectDate;
	private Date createdDate;
	private boolean customerAcceptance;
	private String customerRejectReason;
	private String dealId;
	private int deliveryTermsDays;
	private String guid;
	private boolean isRevised;
	private Date lastModifiedDate;
	private String location;
	private String orderName;
	private String personEmail;
	private String personPhone;
	private int poPaymentTermsDays;
	private String remarks;
	private Date shipmentDate;
	private Date vendorCommitDate;
	private int vendorPaymentTermsDays;
	private String vendorQuote;
	private String approveRejectReason;
	private Date approveRejectDate;
	private String cancelReason;
	private double conversionRateInr;
	private boolean needVerification;
	private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);
	private Set<GrnHeader> grnHeaders = new HashSet<GrnHeader>(0);
	private Set<PurchaseEntry> purchaseEntries = new HashSet<PurchaseEntry>(0);
	private Set<PurchaseEntry> purchaseEntries_1 = new HashSet<PurchaseEntry>(0);
	private Set<OrderItem> orderItems_1 = new HashSet<OrderItem>(0);
	private Set<GrnHeader> grnHeaders_1 = new HashSet<GrnHeader>(0);

	public PurchaseOrderHeader() {
	}

	public PurchaseOrderHeader(long id, boolean customerAcceptance, int deliveryTermsDays, boolean isRevised,
			int poPaymentTermsDays, int vendorPaymentTermsDays, double conversionRateInr, boolean needVerification) {
		this.id = id;
		this.customerAcceptance = customerAcceptance;
		this.deliveryTermsDays = deliveryTermsDays;
		this.isRevised = isRevised;
		this.poPaymentTermsDays = poPaymentTermsDays;
		this.vendorPaymentTermsDays = vendorPaymentTermsDays;
		this.conversionRateInr = conversionRateInr;
		this.needVerification = needVerification;
	}

	public PurchaseOrderHeader(long id, AccountAddress accountAddress, AccountDetail accountDetailByAccountId,
			AccountDetail accountDetailByToShipAccountFk, BusinessDeal businessDeal, CrmType crmType, Currency currency,
			Domain domain, Organisation organisation, OrganisationAddress organisationAddress, OrgLocation orgLocation,
			PersonDetail personDetail, QuoteHeader quoteHeader, SalesOrderHeader salesOrderHeader,
			StatusItem statusItem, UserDetails userDetailsByCreatedBy, UserDetails userDetailsByLastModifiedBy,
			Date acceptRejectDate, Date createdDate, boolean customerAcceptance, String customerRejectReason,
			String dealId, int deliveryTermsDays, String guid, boolean isRevised, Date lastModifiedDate,
			String location, String orderName, String personEmail, String personPhone, int poPaymentTermsDays,
			String remarks, Date shipmentDate, Date vendorCommitDate, int vendorPaymentTermsDays, String vendorQuote,
			String approveRejectReason, Date approveRejectDate, String cancelReason, double conversionRateInr,
			boolean needVerification, Set<OrderItem> orderItems, Set<GrnHeader> grnHeaders,
			Set<PurchaseEntry> purchaseEntries, Set<PurchaseEntry> purchaseEntries_1, Set<OrderItem> orderItems_1,
			Set<GrnHeader> grnHeaders_1) {
		this.id = id;
		this.accountAddress = accountAddress;
		this.accountDetailByAccountId = accountDetailByAccountId;
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
		this.businessDeal = businessDeal;
		this.crmType = crmType;
		this.currency = currency;
		this.domain = domain;
		this.organisation = organisation;
		this.organisationAddress = organisationAddress;
		this.orgLocation = orgLocation;
		this.personDetail = personDetail;
		this.quoteHeader = quoteHeader;
		this.salesOrderHeader = salesOrderHeader;
		this.statusItem = statusItem;
		this.userDetailsByCreatedBy = userDetailsByCreatedBy;
		this.userDetailsByLastModifiedBy = userDetailsByLastModifiedBy;
		this.acceptRejectDate = acceptRejectDate;
		this.createdDate = createdDate;
		this.customerAcceptance = customerAcceptance;
		this.customerRejectReason = customerRejectReason;
		this.dealId = dealId;
		this.deliveryTermsDays = deliveryTermsDays;
		this.guid = guid;
		this.isRevised = isRevised;
		this.lastModifiedDate = lastModifiedDate;
		this.location = location;
		this.orderName = orderName;
		this.personEmail = personEmail;
		this.personPhone = personPhone;
		this.poPaymentTermsDays = poPaymentTermsDays;
		this.remarks = remarks;
		this.shipmentDate = shipmentDate;
		this.vendorCommitDate = vendorCommitDate;
		this.vendorPaymentTermsDays = vendorPaymentTermsDays;
		this.vendorQuote = vendorQuote;
		this.approveRejectReason = approveRejectReason;
		this.approveRejectDate = approveRejectDate;
		this.cancelReason = cancelReason;
		this.conversionRateInr = conversionRateInr;
		this.needVerification = needVerification;
		this.orderItems = orderItems;
		this.grnHeaders = grnHeaders;
		this.purchaseEntries = purchaseEntries;
		this.purchaseEntries_1 = purchaseEntries_1;
		this.orderItems_1 = orderItems_1;
		this.grnHeaders_1 = grnHeaders_1;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIPPING_FK")
	public AccountAddress getAccountAddress() {
		return this.accountAddress;
	}

	public void setAccountAddress(AccountAddress accountAddress) {
		this.accountAddress = accountAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACCOUNT_ID")
	public AccountDetail getAccountDetailByAccountId() {
		return this.accountDetailByAccountId;
	}

	public void setAccountDetailByAccountId(AccountDetail accountDetailByAccountId) {
		this.accountDetailByAccountId = accountDetailByAccountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TO_SHIP_ACCOUNT_FK")
	public AccountDetail getAccountDetailByToShipAccountFk() {
		return this.accountDetailByToShipAccountFk;
	}

	public void setAccountDetailByToShipAccountFk(AccountDetail accountDetailByToShipAccountFk) {
		this.accountDetailByToShipAccountFk = accountDetailByToShipAccountFk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BUSINESS_DEAL_ID")
	public BusinessDeal getBusinessDeal() {
		return this.businessDeal;
	}

	public void setBusinessDeal(BusinessDeal businessDeal) {
		this.businessDeal = businessDeal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PO_TYPE_FK")
	public CrmType getCrmType() {
		return this.crmType;
	}

	public void setCrmType(CrmType crmType) {
		this.crmType = crmType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CURRENCY_FK")
	public Currency getCurrency() {
		return this.currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOMAIN_FK")
	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_FK")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BILLING_FK")
	public OrganisationAddress getOrganisationAddress() {
		return this.organisationAddress;
	}

	public void setOrganisationAddress(OrganisationAddress organisationAddress) {
		this.organisationAddress = organisationAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORG_LOCATION_FK")
	public OrgLocation getOrgLocation() {
		return this.orgLocation;
	}

	public void setOrgLocation(OrgLocation orgLocation) {
		this.orgLocation = orgLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSON_ID")
	public PersonDetail getPersonDetail() {
		return this.personDetail;
	}

	public void setPersonDetail(PersonDetail personDetail) {
		this.personDetail = personDetail;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QUOTATION_FK")
	public QuoteHeader getQuoteHeader() {
		return this.quoteHeader;
	}

	public void setQuoteHeader(QuoteHeader quoteHeader) {
		this.quoteHeader = quoteHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SALES_ORDER_ID")
	public SalesOrderHeader getSalesOrderHeader() {
		return this.salesOrderHeader;
	}

	public void setSalesOrderHeader(SalesOrderHeader salesOrderHeader) {
		this.salesOrderHeader = salesOrderHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDER_STATUS_FK")
	public StatusItem getStatusItem() {
		return this.statusItem;
	}

	public void setStatusItem(StatusItem statusItem) {
		this.statusItem = statusItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public UserDetails getUserDetailsByCreatedBy() {
		return this.userDetailsByCreatedBy;
	}

	public void setUserDetailsByCreatedBy(UserDetails userDetailsByCreatedBy) {
		this.userDetailsByCreatedBy = userDetailsByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAST_MODIFIED_BY")
	public UserDetails getUserDetailsByLastModifiedBy() {
		return this.userDetailsByLastModifiedBy;
	}

	public void setUserDetailsByLastModifiedBy(UserDetails userDetailsByLastModifiedBy) {
		this.userDetailsByLastModifiedBy = userDetailsByLastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ACCEPT_REJECT_DATE", length = 19)
	public Date getAcceptRejectDate() {
		return this.acceptRejectDate;
	}

	public void setAcceptRejectDate(Date acceptRejectDate) {
		this.acceptRejectDate = acceptRejectDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CUSTOMER_ACCEPTANCE", nullable = false)
	public boolean isCustomerAcceptance() {
		return this.customerAcceptance;
	}

	public void setCustomerAcceptance(boolean customerAcceptance) {
		this.customerAcceptance = customerAcceptance;
	}

	@Column(name = "CUSTOMER_REJECT_REASON")
	public String getCustomerRejectReason() {
		return this.customerRejectReason;
	}

	public void setCustomerRejectReason(String customerRejectReason) {
		this.customerRejectReason = customerRejectReason;
	}

	@Column(name = "DEAL_ID")
	public String getDealId() {
		return this.dealId;
	}

	public void setDealId(String dealId) {
		this.dealId = dealId;
	}

	@Column(name = "DELIVERY_TERMS_DAYS", nullable = false)
	public int getDeliveryTermsDays() {
		return this.deliveryTermsDays;
	}

	public void setDeliveryTermsDays(int deliveryTermsDays) {
		this.deliveryTermsDays = deliveryTermsDays;
	}

	@Column(name = "GUID")
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Column(name = "IS_REVISED", nullable = false)
	public boolean isIsRevised() {
		return this.isRevised;
	}

	public void setIsRevised(boolean isRevised) {
		this.isRevised = isRevised;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "LOCATION")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "ORDER_NAME")
	public String getOrderName() {
		return this.orderName;
	}

	public void setOrderName(String orderName) {
		this.orderName = orderName;
	}

	@Column(name = "PERSON_EMAIL")
	public String getPersonEmail() {
		return this.personEmail;
	}

	public void setPersonEmail(String personEmail) {
		this.personEmail = personEmail;
	}

	@Column(name = "PERSON_PHONE")
	public String getPersonPhone() {
		return this.personPhone;
	}

	public void setPersonPhone(String personPhone) {
		this.personPhone = personPhone;
	}

	@Column(name = "PO_PAYMENT_TERMS_DAYS", nullable = false)
	public int getPoPaymentTermsDays() {
		return this.poPaymentTermsDays;
	}

	public void setPoPaymentTermsDays(int poPaymentTermsDays) {
		this.poPaymentTermsDays = poPaymentTermsDays;
	}

	@Column(name = "REMARKS")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SHIPMENT_DATE", length = 19)
	public Date getShipmentDate() {
		return this.shipmentDate;
	}

	public void setShipmentDate(Date shipmentDate) {
		this.shipmentDate = shipmentDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "VENDOR_COMMIT_DATE", length = 19)
	public Date getVendorCommitDate() {
		return this.vendorCommitDate;
	}

	public void setVendorCommitDate(Date vendorCommitDate) {
		this.vendorCommitDate = vendorCommitDate;
	}

	@Column(name = "VENDOR_PAYMENT_TERMS_DAYS", nullable = false)
	public int getVendorPaymentTermsDays() {
		return this.vendorPaymentTermsDays;
	}

	public void setVendorPaymentTermsDays(int vendorPaymentTermsDays) {
		this.vendorPaymentTermsDays = vendorPaymentTermsDays;
	}

	@Column(name = "VENDOR_QUOTE")
	public String getVendorQuote() {
		return this.vendorQuote;
	}

	public void setVendorQuote(String vendorQuote) {
		this.vendorQuote = vendorQuote;
	}

	@Column(name = "APPROVE_REJECT_REASON")
	public String getApproveRejectReason() {
		return this.approveRejectReason;
	}

	public void setApproveRejectReason(String approveRejectReason) {
		this.approveRejectReason = approveRejectReason;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "APPROVE_REJECT_DATE", length = 19)
	public Date getApproveRejectDate() {
		return this.approveRejectDate;
	}

	public void setApproveRejectDate(Date approveRejectDate) {
		this.approveRejectDate = approveRejectDate;
	}

	@Column(name = "CANCEL_REASON")
	public String getCancelReason() {
		return this.cancelReason;
	}

	public void setCancelReason(String cancelReason) {
		this.cancelReason = cancelReason;
	}

	@Column(name = "CONVERSION_RATE_INR", nullable = false, precision = 22, scale = 0)
	public double getConversionRateInr() {
		return this.conversionRateInr;
	}

	public void setConversionRateInr(double conversionRateInr) {
		this.conversionRateInr = conversionRateInr;
	}

	@Column(name = "NEED_VERIFICATION", nullable = false)
	public boolean isNeedVerification() {
		return this.needVerification;
	}

	public void setNeedVerification(boolean needVerification) {
		this.needVerification = needVerification;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrderHeader")
	public Set<OrderItem> getOrderItems() {
		return this.orderItems;
	}

	public void setOrderItems(Set<OrderItem> orderItems) {
		this.orderItems = orderItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrderHeader")
	public Set<GrnHeader> getGrnHeaders() {
		return this.grnHeaders;
	}

	public void setGrnHeaders(Set<GrnHeader> grnHeaders) {
		this.grnHeaders = grnHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrderHeader")
	public Set<PurchaseEntry> getPurchaseEntries() {
		return this.purchaseEntries;
	}

	public void setPurchaseEntries(Set<PurchaseEntry> purchaseEntries) {
		this.purchaseEntries = purchaseEntries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrderHeader")
	public Set<PurchaseEntry> getPurchaseEntries_1() {
		return this.purchaseEntries_1;
	}

	public void setPurchaseEntries_1(Set<PurchaseEntry> purchaseEntries_1) {
		this.purchaseEntries_1 = purchaseEntries_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrderHeader")
	public Set<OrderItem> getOrderItems_1() {
		return this.orderItems_1;
	}

	public void setOrderItems_1(Set<OrderItem> orderItems_1) {
		this.orderItems_1 = orderItems_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrderHeader")
	public Set<GrnHeader> getGrnHeaders_1() {
		return this.grnHeaders_1;
	}

	public void setGrnHeaders_1(Set<GrnHeader> grnHeaders_1) {
		this.grnHeaders_1 = grnHeaders_1;
	}

}
